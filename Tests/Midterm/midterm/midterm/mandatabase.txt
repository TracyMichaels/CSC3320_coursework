MAN(1)                                  Manual pager utils                                 MAN(1)



NAME
       man - an interface to the on-line reference manuals

SYNOPSIS
       man  [-C  file]  [-d]  [-D]  [--warnings[=warnings]]  [-R  encoding]  [-L locale] [-m sys‐
       tem[,...]] [-M path] [-S list] [-e extension] [-i|-I] [--regex|--wildcard]  [--names-only]
       [-a]  [-u]  [--no-subpages]  [-P  pager] [-r prompt] [-7] [-E encoding] [--no-hyphenation]
       [--no-justification] [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]] [-Z] [[section]
       page ...] ...
       man -k [apropos options] regexp ...
       man -K [-w|-W] [-S list] [-i|-I] [--regex] [section] term ...
       man -f [whatis options] page ...
       man  -l  [-C  file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-P pager]
       [-r prompt] [-7] [-E encoding] [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]]  [-Z]
       file ...
       man -w|-W [-C file] [-d] [-D] page ...
       man -c [-C file] [-d] [-D] page ...
       man [-?V]

DESCRIPTION
       man  is the system's manual pager. Each page argument given to man is normally the name of
       a program, utility or function.  The manual page associated with each of  these  arguments
       is  then found and displayed. A section, if provided, will direct man to look only in that
       section of the manual.  The default action is to search in all of the available  sections,
       following  a  pre-defined order and to show only the first page found, even if page exists
       in several sections.

       The table below shows the section numbers of the manual followed by  the  types  of  pages
       they contain.


       1   Executable programs or shell commands
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions eg /etc/passwd
       6   Games
       7   Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)
       8   System administration commands (usually only for root)
       9   Kernel routines [Non standard]

       A manual page consists of several sections.

       Conventional  section  names  include NAME, SYNOPSIS, CONFIGURATION, DESCRIPTION, OPTIONS,
       EXIT STATUS, RETURN VALUE, ERRORS, ENVIRONMENT,  FILES,  VERSIONS,  CONFORMING TO,  NOTES,
       BUGS, EXAMPLE, AUTHORS, and SEE ALSO.

       The  following  conventions  apply  to  the SYNOPSIS section and can be used as a guide in
       other sections.


       bold text          type exactly as shown.
       italic text        replace with appropriate argument.
       [-abc]             any or all arguments within [ ] are optional.
       -a|-b              options delimited by | cannot be used together.
       argument ...       argument is repeatable.
       [expression] ...   entire expression within [ ] is repeatable.

       Exact rendering may vary depending on the output device.  For instance, man  will  usually
       not  be  able  to render italics when running in a terminal, and will typically use under‐
       lined or coloured text instead.

       The command or function illustration is a pattern that should match all  possible  invoca‐
       tions.   In  some  cases it is advisable to illustrate several exclusive invocations as is
       shown in the SYNOPSIS section of this manual page.

EXAMPLES
       man ls
           Display the manual page for the item (program) ls.

       man -a intro
           Display, in succession, all of the available intro manual pages contained  within  the
           manual.  It is possible to quit between successive displays or skip any of them.

       man -t alias | lpr -Pps
           Format  the  manual  page referenced by `alias', usually a shell manual page, into the
           default troff or groff format and pipe it to the printer named ps.  The default output
           for  groff  is  usually PostScript.  man --help should advise as to which processor is
           bound to the -t option.

       man -l -Tdvi ./foo.1x.gz > ./foo.1x.dvi
           This command will decompress and format the nroff source manual page ./foo.1x.gz  into
           a  device  independent (dvi) file.  The redirection is necessary as the -T flag causes
           output to be directed to stdout with no pager.  The output could be viewed with a pro‐
           gram such as xdvi or further processed into PostScript using a program such as dvips.

       man -k printf
           Search  the short descriptions and manual page names for the keyword printf as regular
           expression.  Print out any matches.  Equivalent to apropos -r printf.

       man -f smail
           Lookup the manual pages referenced by smail and print out the  short  descriptions  of
           any found.  Equivalent to whatis -r smail.

OVERVIEW
       Many  options are available to man in order to give as much flexibility as possible to the
       user.  Changes can be made to the search path, section order, output processor, and  other
       behaviours and operations detailed below.

       If  set, various environment variables are interrogated to determine the operation of man.
       It is possible to set the `catch all' variable $MANOPT to any string in command line  for‐
       mat  with  the  exception  that  any  spaces  used as part of an option's argument must be
       escaped (preceded by a backslash).  man will parse $MANOPT prior to parsing its  own  com‐
       mand  line.   Those  options  requiring an argument will be overridden by the same options
       found on the command line.  To reset all of the options set in $MANOPT, -D can  be  speci‐
       fied  as  the  initial  command  line  option.   This will allow man to `forget' about the
       options specified in $MANOPT although they must still have been valid.

       The manual pager utilities packaged as man-db make extensive use of index database caches.
       These  caches  contain  information  such  as  where  each manual page can be found on the
       filesystem and what its whatis (short one line description of the man page) contains,  and
       allow  man  to  run  faster  than if it had to search the filesystem each time to find the
       appropriate manual page.  If requested using the -u  option,  man  will  ensure  that  the
       caches  remain  consistent,  which can obviate the need to manually run software to update
       traditional whatis text databases.

       If man cannot find a mandb initiated index database for a particular manual  page  hierar‐
       chy,  it  will still search for the requested manual pages, although file globbing will be
       necessary to search within that hierarchy.  If whatis or apropos fails to find an index it
       will try to extract information from a traditional whatis database instead.

       These  utilities  support compressed source nroff files having, by default, the extensions
       of .Z, .z and .gz.  It is possible to deal with any compression extension, but this infor‐
       mation  must  be known at compile time.  Also, by default, any cat pages produced are com‐
       pressed using gzip.  Each  `global'  manual  page  hierarchy  such  as  /usr/share/man  or
       /usr/X11R6/man  may  have  any directory as its cat page hierarchy.  Traditionally the cat
       pages are stored under the same hierarchy as the man pages, but for reasons such as  those
       specified  in the File Hierarchy Standard (FHS), it may be better to store them elsewhere.
       For details on how to do this, please read manpath(5).  For details on  why  to  do  this,
       read the standard.

       International  support  is  available with this package.  Native language manual pages are
       accessible (if available on your system) via use of locale functions.   To  activate  such
       support,  it  is  necessary  to set either $LC_MESSAGES, $LANG or another system dependent
       environment variable to your language locale, usually specified in the POSIX 1003.1  based
       format:

       <language>[_<territory>[.<character-set>[,<version>]]]

       If the desired page is available in your locale, it will be displayed in lieu of the stan‐
       dard (usually American English) page.

       Support for international message catalogues is also featured in this package and  can  be
       activated in the same way, again if available.  If you find that the manual pages and mes‐
       sage catalogues supplied with this package are not available in your native  language  and
       you would like to supply them, please contact the maintainer who will be coordinating such
       activity.

       For information regarding other features and extensions available with this manual  pager,
       please read the documents supplied with the package.

DEFAULTS
       man  will  search for the desired manual pages within the index database caches. If the -u
       option is given, a cache consistency check is performed to ensure the databases accurately
       reflect  the filesystem.  If this option is always given, it is not generally necessary to
       run mandb after the caches are initially created, unless a cache  becomes  corrupt.   How‐
       ever, the cache consistency check can be slow on systems with many manual pages installed,
       so it is not performed by default, and system administrators may wish to run  mandb  every
       week  or  so  to keep the database caches fresh.  To forestall problems caused by outdated
       caches, man will fall back to file globbing if a cache lookup fails, just as it  would  if
       no cache was present.

       Once  a  manual page has been located, a check is performed to find out if a relative pre‐
       formatted `cat' file already exists and is newer than the nroff file.  If it does and  is,
       this  preformatted  file is (usually) decompressed and then displayed, via use of a pager.
       The pager can be specified in a number of ways, or else will fall back  to  a  default  is
       used (see option -P for details).  If no cat is found or is older than the nroff file, the
       nroff is filtered through various programs and is shown immediately.

       If a cat file can be produced (a relative cat directory exists and has appropriate permis‐
       sions), man will compress and store the cat file in the background.

       The  filters  are  deciphered by a number of means. Firstly, the command line option -p or
       the environment variable $MANROFFSEQ is interrogated. If -p was not used and the  environ‐
       ment variable was not set, the initial line of the nroff file is parsed for a preprocessor
       string.  To contain a valid preprocessor string, the first line must resemble

       '\" <string>

       where string can be any combination of letters described by option -p below.

       If none of the above methods provide any filter information, a default set is used.

       A formatting pipeline is formed from the filters  and  the  primary  formatter  (nroff  or
       [tg]roff  with  -t)  and executed.  Alternatively, if an executable program mandb_nfmt (or
       mandb_tfmt with -t) exists in the man tree root, it is executed instead.  It  gets  passed
       the  manual source file, the preprocessor string, and optionally the device specified with
       -T or -E as arguments.

OPTIONS
       Non argument options that are duplicated either on the command line, in $MANOPT, or  both,
       are not harmful.  For options that require an argument, each duplication will override the
       previous argument value.

   General options
       -C file, --config-file=file
              Use this user configuration file rather than the default of ~/.manpath.

       -d, --debug
              Print debugging information.

       -D, --default
              This option is normally issued as the very first option and resets man's  behaviour
              to  its  default.   Its  use  is  to  reset those options that may have been set in
              $MANOPT.  Any options that follow -D will have their usual effect.

       --warnings[=warnings]
              Enable warnings from groff.  This may be used  to  perform  sanity  checks  on  the
              source  text of manual pages.  warnings is a comma-separated list of warning names;
              if it is not supplied, the default is "mac".  See the “Warnings” node in info groff
              for a list of available warning names.

   Main modes of operation
       -f, --whatis
              Equivalent  to whatis.  Display a short description from the manual page, if avail‐
              able. See whatis(1) for details.

       -k, --apropos
              Equivalent to apropos.  Search the short manual page descriptions for keywords  and
              display any matches.  See apropos(1) for details.

       -K, --global-apropos
              Search  for  text in all manual pages.  This is a brute-force search, and is likely
              to take some time; if you can, you should specify a section to reduce the number of
              pages  that need to be searched.  Search terms may be simple strings (the default),
              or regular expressions if the --regex option is used.

       -l, --local-file
              Activate `local' mode.  Format and display local manual files instead of  searching
              through  the  system's manual collection.  Each manual page argument will be inter‐
              preted as an nroff source file in the correct format.  No cat file is produced.  If
              '-'  is  listed as one of the arguments, input will be taken from stdin.  When this
              option is not used, and man fails to find the page required, before displaying  the
              error message, it attempts to act as if this option was supplied, using the name as
              a filename and looking for an exact match.

       -w, --where, --path, --location
              Don't actually display the manual pages, but do print the location(s) of the source
              nroff files that would be formatted.

       -W, --where-cat, --location-cat
              Don't  actually  display  the manual pages, but do print the location(s) of the cat
              files that would be displayed.  If -w and -W are both specified, print  both  sepa‐
              rated by a space.

       -c, --catman
              This option is not for general use and should only be used by the catman program.

       -R encoding, --recode=encoding
              Instead of formatting the manual page in the usual way, output its source converted
              to the specified encoding.  If you already know the encoding of  the  source  file,
              you  can  also use manconv(1) directly.  However, this option allows you to convert
              several manual pages to a single encoding without having to  explicitly  state  the
              encoding  of each, provided that they were already installed in a structure similar
              to a manual page hierarchy.

   Finding manual pages
       -L locale, --locale=locale
              man will normally determine your current locale by a call to the C function  setlo‐
              cale(3)  which  interrogates  various  environment  variables,  possibly  including
              $LC_MESSAGES and $LANG.  To temporarily override the  determined  value,  use  this
              option  to  supply  a  locale  string  directly to man.  Note that it will not take
              effect until the search for pages actually begins.  Output such as the help message
              will always be displayed in the initially determined locale.

       -m system[,...], --systems=system[,...]
              If  this  system  has  access to other operating system's manual pages, they can be
              accessed using this option.  To search for a manual page from NewOS's  manual  page
              collection, use the option -m NewOS.

              The  system  specified  can  be  a  combination of comma delimited operating system
              names.  To include a search of the native operating system's manual pages,  include
              the  system name man in the argument string.  This option will override the $SYSTEM
              environment variable.

       -M path, --manpath=path
              Specify an alternate manpath to use.  By default, man uses manpath derived code  to
              determine the path to search.  This option overrides the $MANPATH environment vari‐
              able and causes option -m to be ignored.

              A path specified as a manpath must be the root of a manual  page  hierarchy  struc‐
              tured  into sections as described in the man-db manual (under "The manual page sys‐
              tem").  To view manual pages outside such hierarchies, see the -l option.

       -S list, -s list, --sections=list
              List is a colon- or comma-separated list of `order  specific'  manual  sections  to
              search.  This option overrides the $MANSECT environment variable.  (The -s spelling
              is for compatibility with System V.)

       -e sub-extension, --extension=sub-extension
              Some systems incorporate large packages of manual pages, such as those that  accom‐
              pany the Tcl package, into the main manual page hierarchy.  To get around the prob‐
              lem of having two manual pages with the same name such as exit(3),  the  Tcl  pages
              were usually all assigned to section l.  As this is unfortunate, it is now possible
              to put the pages in the correct section, and to assign a  specific  `extension'  to
              them,  in  this case, exit(3tcl).  Under normal operation, man will display exit(3)
              in preference to exit(3tcl).  To negotiate this situation and to  avoid  having  to
              know  which section the page you require resides in, it is now possible to give man
              a sub-extension string indicating which package the page must belong to.  Using the
              above example, supplying the option -e tcl to man will restrict the search to pages
              having an extension of *tcl.

       -i, --ignore-case
              Ignore case when searching for manual pages.  This is the default.

       -I, --match-case
              Search for manual pages case-sensitively.

       --regex
              Show all pages with any part of either their names or their  descriptions  matching
              each  page  argument  as  a regular expression, as with apropos(1).  Since there is
              usually no reasonable way to pick a  "best"  page  when  searching  for  a  regular
              expression, this option implies -a.

       --wildcard
              Show  all  pages with any part of either their names or their descriptions matching
              each page argument using shell-style wildcards, as with apropos(1) --wildcard.  The
              page  argument  must  match the entire name or description, or match on word bound‐
              aries in the description.  Since there is usually  no  reasonable  way  to  pick  a
              "best" page when searching for a wildcard, this option implies -a.

       --names-only
              If  the  --regex  or  --wildcard  option  is  used, match only page names, not page
              descriptions, as with whatis(1).  Otherwise, no effect.

       -a, --all
              By default, man will exit after displaying the most suitable manual page it  finds.
              Using  this option forces man to display all the manual pages with names that match
              the search criteria.

       -u, --update
              This option causes man to perform an `inode level' consistency check on  its  data‐
              base  caches  to ensure that they are an accurate representation of the filesystem.
              It will only have a useful effect if man is installed with the setuid bit set.

       --no-subpages
              By default, man will try to interpret pairs of manual page names given on the  com‐
              mand  line  as  equivalent  to  a single manual page name containing a hyphen or an
              underscore.  This supports the common pattern of programs that implement  a  number
              of subcommands, allowing them to provide manual pages for each that can be accessed
              using similar syntax as would be used to invoke the  subcommands  themselves.   For
              example:

                $ man -aw git diff
                /usr/share/man/man1/git-diff.1.gz

              To disable this behaviour, use the --no-subpages option.

                $ man -aw --no-subpages git diff
                /usr/share/man/man1/git.1.gz
                /usr/share/man/man3/Git.3pm.gz
                /usr/share/man/man1/diff.1.gz

   Controlling formatted output
       -P pager, --pager=pager
              Specify  which  output  pager  to  use.  By default, man uses less -s.  This option
              overrides the $MANPAGER environment variable, which in turn  overrides  the  $PAGER
              environment variable.  It is not used in conjunction with -f or -k.

              The  value  may  be  a simple command name or a command with arguments, and may use
              shell quoting (backslashes, single quotes, or double quotes).  It may not use pipes
              to  connect  multiple  commands;  if you need that, use a wrapper script, which may
              take the file to display either as an argument or on standard input.

       -r prompt, --prompt=prompt
              If a recent version of less is used as the pager,  man  will  attempt  to  set  its
              prompt and some sensible options.  The default prompt looks like

               Manual page name(sec) line x

              where name denotes the manual page name, sec denotes the section it was found under
              and x the current line number.  This is achieved by  using  the  $LESS  environment
              variable.

              Supplying  -r with a string will override this default.  The string may contain the
              text $MAN_PN which will be expanded to the name of the current manual page and  its
              section  name  surrounded  by  `(' and `)'.  The string used to produce the default
              could be expressed as

              \ Manual\ page\ \$MAN_PN\ ?ltline\ %lt?L/%L.:
              byte\ %bB?s/%s..?\ (END):?pB\ %pB\\%..
              (press h for help or q to quit)

              It is broken into three lines here for the sake of readability only.  For its mean‐
              ing  see  the  less(1)  manual  page.   The prompt string is first evaluated by the
              shell.  All double quotes, back-quotes  and  backslashes  in  the  prompt  must  be
              escaped  by a preceding backslash.  The prompt string may end in an escaped $ which
              may be followed by further options for less.  By default man sets the -ix8 options.

              If you want to override man's prompt string processing completely, use the $MANLESS
              environment variable described below.

       -7, --ascii
              When  viewing a pure ascii(7) manual page on a 7 bit terminal or terminal emulator,
              some characters may not display correctly when using the latin1(7) device  descrip‐
              tion with GNU nroff.  This option allows pure ascii manual pages to be displayed in
              ascii with the latin1 device.  It will not translate any latin1 text.  The  follow‐
              ing  table shows the translations performed: some parts of it may only be displayed
              properly when using GNU nroff's latin1(7) device.


              Description           Octal   latin1   ascii
              ─────────────────────────────────────────────
              continuation hyphen    255      ‐        -
              bullet (middle dot)    267      ·        o
              acute accent           264      ´        '
              multiplication sign    327      ×        x

              If the latin1 column displays correctly, your terminal may be  set  up  for  latin1
              characters  and  this option is not necessary.  If the latin1 and ascii columns are
              identical, you are reading this page using this option or man did not  format  this
              page  using the latin1 device description.  If the latin1 column is missing or cor‐
              rupt, you may need to view manual pages with this option.

              This option is ignored when using options -t, -H, -T, or -Z and may be useless  for
              nroff other than GNU's.

       -E encoding, --encoding=encoding
              Generate output for a character encoding other than the default.  For backward com‐
              patibility, encoding may be an nroff device such as ascii, latin1, or utf8 as  well
              as a true character encoding such as UTF-8.

       --no-hyphenation, --nh
              Normally, nroff will automatically hyphenate text at line breaks even in words that
              do not contain hyphens, if it is necessary to do so to lay  out  words  on  a  line
              without  excessive  spacing.   This option disables automatic hyphenation, so words
              will only be hyphenated if they already contain hyphens.

              If you are writing a manual page and simply want to prevent nroff from  hyphenating
              a  word  at  an  inappropriate point, do not use this option, but consult the nroff
              documentation instead; for instance, you can put "\%" inside  a  word  to  indicate
              that it may be hyphenated at that point, or put "\%" at the start of a word to pre‐
              vent it from being hyphenated.

       --no-justification, --nj
              Normally, nroff will automatically justify text to both margins.  This option  dis‐
              ables  full  justification,  leaving  justified  only to the left margin, sometimes
              called "ragged-right" text.

              If you are writing a manual page and simply want to prevent nroff  from  justifying
              certain  paragraphs,  do  not  use this option, but consult the nroff documentation
              instead; for instance, you can use the ".na", ".nf", ".fi", and ".ad"  requests  to
              temporarily disable adjusting and filling.

       -p string, --preprocessor=string
              Specify  the sequence of preprocessors to run before nroff or troff/groff.  Not all
              installations will have a full set of preprocessors.  Some of the preprocessors and
              the letters used to designate them are: eqn (e), grap (g), pic (p), tbl (t), vgrind
              (v), refer (r).  This option overrides the $MANROFFSEQ environment variable.  zsoe‐
              lim is always run as the very first preprocessor.

       -t, --troff
              Use groff -mandoc to format the manual page to stdout.  This option is not required
              in conjunction with -H, -T, or -Z.

       -T[device], --troff-device[=device]
              This option is used to change groff (or possibly troff's) output to be suitable for
              a  device  other  than  the  default.   It  implies  -t.   Examples  (provided with
              Groff-1.17) include dvi, latin1, ps, utf8, X75 and X100.

       -H[browser], --html[=browser]
              This option will cause groff to produce HTML output, and will display  that  output
              in  a  web  browser.   The  choice of browser is determined by the optional browser
              argument if one is provided, by the $BROWSER environment variable, or by a compile-
              time  default  if  that  is unset (usually lynx).  This option implies -t, and will
              only work with GNU troff.

       -X[dpi], --gxditview[=dpi]
              This option displays the output of groff in a graphical window using the  gxditview
              program.   The  dpi (dots per inch) may be 75, 75-12, 100, or 100-12, defaulting to
              75; the -12 variants use a 12-point base font.  This option  implies  -T  with  the
              X75, X75-12, X100, or X100-12 device respectively.

       -Z, --ditroff
              groff  will  run troff and then use an appropriate post-processor to produce output
              suitable for the chosen device.  If groff -mandoc is groff, this option  is  passed
              to groff and will suppress the use of a post-processor.  It implies -t.

   Getting help
       -?, --help
              Print a help message and exit.

       --usage
              Print a short usage message and exit.

       -V, --version
              Display version information.

EXIT STATUS
       0      Successful program execution.

       1      Usage, syntax or configuration file error.

       2      Operational error.

       3      A child process returned a non-zero exit status.

       16     At least one of the pages/files/keywords didn't exist or wasn't matched.

ENVIRONMENT
       MANPATH
              If $MANPATH is set, its value is used as the path to search for manual pages.

       MANROFFOPT
              The  contents  of  $MANROFFOPT are added to the command line every time man invokes
              the formatter (nroff, troff, or groff).

       MANROFFSEQ
              If $MANROFFSEQ is set, its value is used to determine the set of  preprocessors  to
              pass each manual page through.  The default preprocessor list is system dependent.

       MANSECT
              If  $MANSECT is set, its value is a colon-delimited list of sections and it is used
              to determine which manual sections to search and in what order.

       MANPAGER, PAGER
              If $MANPAGER or $PAGER is set ($MANPAGER is used in preference), its value is  used
              as the name of the program used to display the manual page.  By default, less -s is
              used.

              The value may be a simple command name or a command with  arguments,  and  may  use
              shell quoting (backslashes, single quotes, or double quotes).  It may not use pipes
              to connect multiple commands; if you need that, use a  wrapper  script,  which  may
              take the file to display either as an argument or on standard input.

       MANLESS
              If  $MANLESS  is  set, man will not perform any of its usual processing to set up a
              prompt string for the less pager.  Instead, the value of $MANLESS  will  be  copied
              verbatim  into  $LESS.   For example, if you want to set the prompt string uncondi‐
              tionally to “my prompt string”, set $MANLESS to ‘-Psmy prompt string’.

       BROWSER
              If $BROWSER is set, its value is a colon-delimited list of commands, each of  which
              in  turn is used to try to start a web browser for man --html.  In each command, %s
              is replaced by a filename containing the HTML output from groff, %% is replaced  by
              a single percent sign (%), and %c is replaced by a colon (:).

       SYSTEM If  $SYSTEM is set, it will have the same effect as if it had been specified as the
              argument to the -m option.

       MANOPT If $MANOPT is set, it will be parsed prior to man's command line and is expected to
              be in a similar format.  As all of the other man specific environment variables can
              be expressed as command line options, and are thus candidates for being included in
              $MANOPT it is expected that they will become obsolete.  N.B. All spaces that should
              be interpreted as part of an option's argument must be escaped.

       MANWIDTH
              If $MANWIDTH is set, its value is used as the line length for  which  manual  pages
              should  be formatted.  If it is not set, manual pages will be formatted with a line
              length appropriate to the current terminal (using an  ioctl(2)  if  available,  the
              value  of $COLUMNS, or falling back to 80 characters if neither is available).  Cat
              pages will only be saved when the default formatting can be used, that is when  the
              terminal line length is between 66 and 80 characters.

       MAN_KEEP_FORMATTING
              Normally,  when  output is not being directed to a terminal (such as to a file or a
              pipe), formatting characters are discarded to make it easier  to  read  the  result
              without  special  tools.   However, if $MAN_KEEP_FORMATTING is set to any non-empty
              value, these formatting characters are retained.  This may be useful  for  wrappers
              around man that can interpret formatting characters.

       MAN_KEEP_STDERR
              Normally,  when  output  is  being directed to a terminal (usually to a pager), any
              error output from the command used to produce formatted versions of manual pages is
              discarded  to  avoid  interfering with the pager's display.  Programs such as groff
              often produce relatively minor error messages about typographical problems such  as
              poor  alignment,  which  are unsightly and generally confusing when displayed along
              with the manual page.  However,  some  users  want  to  see  them  anyway,  so,  if
              $MAN_KEEP_STDERR  is  set to any non-empty value, error output will be displayed as
              usual.

       LANG, LC_MESSAGES
              Depending on system and implementation, either or both of  $LANG  and  $LC_MESSAGES
              will be interrogated for the current message locale.  man will display its messages
              in that locale (if available).  See setlocale(3) for precise details.

FILES
       /etc/man_db.conf
              man-db configuration file.

       /usr/share/man
              A global manual page hierarchy.

       /usr/share/man/index.(bt|db|dir|pag)
              A traditional global index database cache.

       /var/cache/man/index.(bt|db|dir|pag)
              An FHS compliant global index database cache.

SEE ALSO
       apropos(1), groff(1), less(1), manpath(1), nroff(1), troff(1), whatis(1), zsoelim(1), set‐
       locale(3),  manpath(5), ascii(7), latin1(7), man(7), catman(8), mandb(8), the man-db pack‐
       age manual, FSSTND

HISTORY
       1990, 1991 - Originally written by John W. Eaton (jwe@che.utexas.edu).

       Dec 23 1992: Rik Faith (faith@cs.unc.edu) applied bug fixes  supplied  by  Willem  Kasdorp
       (wkasdo@nikhefk.nikef.nl).

       30th  April 1994 - 23rd February 2000: Wilf. (G.Wilford@ee.surrey.ac.uk) has been develop‐
       ing and maintaining this package with the help of a few dedicated people.

       30th October 1996 - 30th March 2001: Fabrizio Polacco <fpolacco@debian.org> maintained and
       enhanced this package for the Debian project, with the help of all the community.

       31st  March  2001  - present day: Colin Watson <cjwatson@debian.org> is now developing and
       maintaining man-db.



2.6.3                                       2012-09-17                                     MAN(1)
LS(1)                                     User Commands                                     LS(1)



NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information about the FILEs (the current directory by default).  Sort entries alpha‐
       betically if none of -cftuvSUX nor --sort is specified.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              scale sizes by SIZE before printing them; e.g., '--block-size=M'  prints  sizes  in
              units of 1,048,576 bytes; see SIZE format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with -lt: sort by, and show, ctime (time of last modification of file status infor‐
              mation); with -l: show ctime and sort by name; otherwise:  sort  by  ctime,  newest
              first

       -C     list entries by columns

       --color[=WHEN]
              colorize  the  output; WHEN can be 'never', 'auto', or 'always' (the default); more
              info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     do not sort, enable -aU, disable -ls --color

       -F, --classify
              append indicator (one of */=>@|) to entries

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  verti‐
              cal -C

       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files;

              can  be  augmented  with  a --sort option, but any use of --sort=none (-U) disables
              grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l, print sizes in human readable format (e.g., 1K 234M 2G)

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
              follow each command line symbolic link

              that points to a directory

       --hide=PATTERN
              do not list implied entries matching shell PATTERN (overridden by -a or -A)

       --indicator-style=WORD
              append indicator with style WORD  to  entry  names:  none  (default),  slash  (-p),
              file-type (--file-type), classify (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default to 1024-byte blocks for disk usage

       -l     use a long listing format

       -L, --dereference
              when  showing  file  information for a symbolic link, show information for the file
              the link references rather than for the link itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print raw entry names (don't treat e.g. control characters specially)

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show nongraphic characters as-is (the default, unless program is 'ls' and output is
              a terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
              use  quoting  style  WORD for entry names: literal, locale, shell, shell-always, c,
              escape

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size

       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time (-t), version (-v), exten‐
              sion (-X)

       --time=WORD
              with -l, show time as WORD instead of default modification time: atime or access or
              use (-u) ctime or status (-c); also use specified time as sort key if --sort=time

       --time-style=STYLE
              with -l, show times using style STYLE: full-iso, long-iso, iso, locale, or +FORMAT;
              FORMAT  is  interpreted  like in 'date'; if FORMAT is FORMAT1<newline>FORMAT2, then
              FORMAT1 applies to non-recent files and FORMAT2 to recent files; if STYLE  is  pre‐
              fixed with 'posix-', STYLE takes effect only outside the POSIX locale

       -t     sort by modification time, newest first

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with  -lt:  sort  by,  and show, access time; with -l: show access time and sort by
              name; otherwise: sort by access time

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              assume screen width instead of current value

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -1     list one file per line

       SELinux options:

       --lcontext
              Display security context.   Enable -l. Lines will probably be  too  wide  for  most
              displays.

       -Z, --context
              Display  security  context  so it fits on most displays.  Displays only mode, user,
              group, security context and file name.

       --scontext
              Display only security context and file name.

       --help display this help and exit

       --version
              output version information and exit

       SIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units are K,  M,  G,
       T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).

       Using  color to distinguish file types is disabled both by default and with --color=never.
       With --color=auto, ls emits color codes only when standard output is connected to a termi‐
       nal.   The LS_COLORS environment variable can change the settings.  Use the dircolors com‐
       mand to set it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line argument).

       GNU coreutils online help: <http://www.gnu.org/software/coreutils/> Report ls  translation
       bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

COPYRIGHT
       Copyright  ©  2013  Free  Software  Foundation, Inc.  License GPLv3+: GNU GPL version 3 or
       later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO  WARRANTY,
       to the extent permitted by law.

SEE ALSO
       The  full documentation for ls is maintained as a Texinfo manual.  If the info and ls pro‐
       grams are properly installed at your site, the command

              info coreutils 'ls invocation'

       should give you access to the complete manual.



GNU coreutils 8.22                        November 2020                                     LS(1)
GREP(1)                              General Commands Manual                              GREP(1)



NAME
       grep, egrep, fgrep - print lines matching a pattern

SYNOPSIS
       grep [OPTIONS] PATTERN [FILE...]
       grep [OPTIONS] [-e PATTERN | -f FILE] [FILE...]

DESCRIPTION
       grep  searches  the  named  input  FILEs (or standard input if no files are named, or if a
       single hyphen-minus (-) is given as file name) for lines containing a match to  the  given
       PATTERN.  By default, grep prints the matching lines.

       In  addition,  two  variant  programs egrep and fgrep are available.  egrep is the same as
       grep -E.  fgrep is the same as grep -F.  Direct invocation as either  egrep  or  fgrep  is
       deprecated,  but  is  provided  to  allow historical applications that rely on them to run
       unmodified.

OPTIONS
   Generic Program Information
       --help Print a usage message briefly summarizing these command-line options and  the  bug-
              reporting address, then exit.

       -V, --version
              Print  the  version  number  of  grep  to the standard output stream.  This version
              number should be included in all bug reports (see below).

   Matcher Selection
       -E, --extended-regexp
              Interpret PATTERN as an extended regular  expression  (ERE,  see  below).   (-E  is
              specified by POSIX.)

       -F, --fixed-strings, --fixed-regexp
              Interpret  PATTERN  as a list of fixed strings, separated by newlines, any of which
              is to be matched.  (-F is specified by POSIX, --fixed-regexp is an obsoleted alias,
              please do not use it in new scripts.)

       -G, --basic-regexp
              Interpret  PATTERN  as  a  basic  regular expression (BRE, see below).  This is the
              default.

       -P, --perl-regexp
              Interpret PATTERN as a Perl regular expression.  This is  highly  experimental  and
              grep -P may warn of unimplemented features.

   Matching Control
       -e PATTERN, --regexp=PATTERN
              Use  PATTERN as the pattern.  This can be used to specify multiple search patterns,
              or to protect a pattern beginning with a hyphen (-).  (-e is specified by POSIX.)

       -f FILE, --file=FILE
              Obtain patterns from FILE, one per line.  The empty file  contains  zero  patterns,
              and therefore matches nothing.  (-f is specified by POSIX.)

       -i, --ignore-case
              Ignore case distinctions in both the PATTERN and the input files.  (-i is specified
              by POSIX.)

       -v, --invert-match
              Invert the sense of matching, to select non-matching lines.  (-v  is  specified  by
              POSIX.)

       -w, --word-regexp
              Select only those lines containing matches that form whole words.  The test is that
              the matching substring must either be at the beginning of the line, or preceded  by
              a  non-word  constituent character.  Similarly, it must be either at the end of the
              line or followed by a non-word constituent character.  Word-constituent  characters
              are letters, digits, and the underscore.

       -x, --line-regexp
              Select  only  those matches that exactly match the whole line.  (-x is specified by
              POSIX.)

       -y     Obsolete synonym for -i.

   General Output Control
       -c, --count
              Suppress normal output; instead print a count of  matching  lines  for  each  input
              file.   With  the  -v, --invert-match option (see below), count non-matching lines.
              (-c is specified by POSIX.)

       --color[=WHEN], --colour[=WHEN]
              Surround the matched (non-empty)  strings,  matching  lines,  context  lines,  file
              names, line numbers, byte offsets, and separators (for fields and groups of context
              lines) with escape sequences to display them in color on the terminal.  The  colors
              are  defined  by  the environment variable GREP_COLORS.  The deprecated environment
              variable GREP_COLOR is still supported, but its setting  does  not  have  priority.
              WHEN is never, always, or auto.

       -L, --files-without-match
              Suppress  normal  output;  instead  print the name of each input file from which no
              output would normally have been printed.  The  scanning  will  stop  on  the  first
              match.

       -l, --files-with-matches
              Suppress normal output; instead print the name of each input file from which output
              would normally have been printed.  The scanning will stop on the first match.   (-l
              is specified by POSIX.)

       -m NUM, --max-count=NUM
              Stop  reading a file after NUM matching lines.  If the input is standard input from
              a regular file, and NUM matching lines are output, grep ensures that  the  standard
              input is positioned to just after the last matching line before exiting, regardless
              of the presence of trailing context lines.   This  enables  a  calling  process  to
              resume a search.  When grep stops after NUM matching lines, it outputs any trailing
              context lines.  When the -c or --count option is also used, grep does not output  a
              count  greater  than  NUM.  When the -v or --invert-match option is also used, grep
              stops after outputting NUM non-matching lines.

       -o, --only-matching
              Print only the matched (non-empty) parts of a matching line, with each such part on
              a separate output line.

       -q, --quiet, --silent
              Quiet; do not write anything to standard output.  Exit immediately with zero status
              if any match is found, even  if  an  error  was  detected.   Also  see  the  -s  or
              --no-messages option.  (-q is specified by POSIX.)

       -s, --no-messages
              Suppress  error  messages about nonexistent or unreadable files.  Portability note:
              unlike GNU grep, 7th Edition Unix grep did not conform to POSIX, because it  lacked
              -q and its -s option behaved like GNU grep's -q option.  USG-style grep also lacked
              -q but its -s option behaved like GNU grep.  Portable shell  scripts  should  avoid
              both  -q and -s and should redirect standard and error output to /dev/null instead.
              (-s is specified by POSIX.)

   Output Line Prefix Control
       -b, --byte-offset
              Print the 0-based byte offset within the input file before each line of output.  If
              -o (--only-matching) is specified, print the offset of the matching part itself.

       -H, --with-filename
              Print  the  file  name for each match.  This is the default when there is more than
              one file to search.

       -h, --no-filename
              Suppress the prefixing of file names on output.  This is the default when there  is
              only one file (or only standard input) to search.

       --label=LABEL
              Display  input actually coming from standard input as input coming from file LABEL.
              This is especially useful when implementing tools like zgrep, e.g., gzip -cd foo.gz
              | grep --label=foo -H something.  See also the -H option.

       -n, --line-number
              Prefix each line of output with the 1-based line number within its input file.  (-n
              is specified by POSIX.)

       -T, --initial-tab
              Make sure that the first character of actual line content lies on a  tab  stop,  so
              that  the  alignment of tabs looks normal.  This is useful with options that prefix
              their output to the actual content:  -H,-n,  and  -b.   In  order  to  improve  the
              probability  that  lines from a single file will all start at the same column, this
              also causes the line number and byte offset (if present) to be printed in a minimum
              size field width.

       -u, --unix-byte-offsets
              Report  Unix-style byte offsets.  This switch causes grep to report byte offsets as
              if the file were a Unix-style text file, i.e., with  CR  characters  stripped  off.
              This will produce results identical to running grep on a Unix machine.  This option
              has no effect unless -b option is also used; it has no effect  on  platforms  other
              than MS-DOS and MS-Windows.

       -Z, --null
              Output a zero byte (the ASCII NUL character) instead of the character that normally
              follows a file name.  For example, grep -lZ outputs a zero  byte  after  each  file
              name  instead of the usual newline.  This option makes the output unambiguous, even
              in the presence of file names containing unusual characters  like  newlines.   This
              option  can be used with commands like find -print0, perl -0, sort -z, and xargs -0
              to process arbitrary file names, even those that contain newline characters.

   Context Line Control
       -A NUM, --after-context=NUM
              Print NUM lines of trailing context after matching lines.  Places a line containing
              a  group separator (described under --group-separator) between contiguous groups of
              matches.  With the -o or --only-matching option, this has no effect and  a  warning
              is given.

       -B NUM, --before-context=NUM
              Print NUM lines of leading context before matching lines.  Places a line containing
              a group separator (described under --group-separator) between contiguous groups  of
              matches.   With  the -o or --only-matching option, this has no effect and a warning
              is given.

       -C NUM, -NUM, --context=NUM
              Print NUM lines of output context.  Places a  line  containing  a  group  separator
              (described under --group-separator) between contiguous groups of matches.  With the
              -o or --only-matching option, this has no effect and a warning is given.

       --group-separator=SEP
              Use SEP as a group separator. By default SEP is double hyphen (--).

       --no-group-separator
              Use empty string as a group separator.

   File and Directory Selection
       -a, --text
              Process  a  binary  file  as  if  it  were  text;  this  is   equivalent   to   the
              --binary-files=text option.

       --binary-files=TYPE
              If  the  first  few  bytes  of  a file indicate that the file contains binary data,
              assume that the file is of type  TYPE.   By  default,  TYPE  is  binary,  and  grep
              normally outputs either a one-line message saying that a binary file matches, or no
              message if there is no match.  If TYPE is without-match, grep assumes that a binary
              file  does  not  match; this is equivalent to the -I option.  If TYPE is text, grep
              processes a binary file as if it were text; this is equivalent to  the  -a  option.
              Warning: grep --binary-files=text might output binary garbage, which can have nasty
              side effects if the output is a terminal and if the terminal driver interprets some
              of it as commands.

       -D ACTION, --devices=ACTION
              If  an  input  file  is  a  device,  FIFO  or socket, use ACTION to process it.  By
              default, ACTION is read, which means that devices are read just  as  if  they  were
              ordinary files.  If ACTION is skip, devices are silently skipped.

       -d ACTION, --directories=ACTION
              If  an  input file is a directory, use ACTION to process it.  By default, ACTION is
              read, i.e., read directories just as if they were ordinary  files.   If  ACTION  is
              skip,  silently  skip directories.  If ACTION is recurse, read all files under each
              directory, recursively, following symbolic links only if they are  on  the  command
              line.  This is equivalent to the -r option.

       --exclude=GLOB
              Skip  files  whose  base  name matches GLOB (using wildcard matching).  A file-name
              glob can use *, ?, and [...]  as wildcards, and \ to quote a wildcard or  backslash
              character literally.

       --exclude-from=FILE
              Skip files whose base name matches any of the file-name globs read from FILE (using
              wildcard matching as described under --exclude).

       --exclude-dir=DIR
              Exclude directories matching the pattern DIR from recursive searches.

       -I     Process a binary file as if it did not contain matching data; this is equivalent to
              the --binary-files=without-match option.

       --include=GLOB
              Search  only  files  whose  base  name  matches  GLOB  (using  wildcard matching as
              described under --exclude).

       -r, --recursive
              Read all files under each directory, recursively, following symbolic links only  if
              they are on the command line.  This is equivalent to the -d recurse option.

       -R, --dereference-recursive
              Read  all  files  under  each  directory,  recursively.  Follow all symbolic links,
              unlike -r.

   Other Options
       --line-buffered
              Use line buffering on output.  This can cause a performance penalty.

       -U, --binary
              Treat the file(s) as binary.  By default, under MS-DOS and MS-Windows, grep guesses
              the  file type by looking at the contents of the first 32KB read from the file.  If
              grep decides the file is a text file, it strips the CR characters from the original
              file  contents  (to  make  regular  expressions  with  ^  and  $  work  correctly).
              Specifying -U overrules this guesswork, causing all files to be read and passed  to
              the matching mechanism verbatim; if the file is a text file with CR/LF pairs at the
              end of each line, this will cause some regular expressions to  fail.   This  option
              has no effect on platforms other than MS-DOS and MS-Windows.

       -z, --null-data
              Treat  the  input  as a set of lines, each terminated by a zero byte (the ASCII NUL
              character) instead of a newline.  Like the -Z or --null option, this option can  be
              used with commands like sort -z to process arbitrary file names.

REGULAR EXPRESSIONS
       A  regular  expression  is a pattern that describes a set of strings.  Regular expressions
       are constructed analogously to arithmetic  expressions,  by  using  various  operators  to
       combine smaller expressions.

       grep   understands  three  different  versions  of  regular  expression  syntax:  “basic,”
       “extended” and “perl.” In GNU grep, there is  no  difference  in  available  functionality
       between  basic and extended syntaxes.  In other implementations, basic regular expressions
       are less powerful.  The following description applies  to  extended  regular  expressions;
       differences  for  basic  regular  expressions  are  summarized  afterwards.   Perl regular
       expressions give  additional  functionality,  and  are  documented  in  pcresyntax(3)  and
       pcrepattern(3), but may not be available on every system.

       The fundamental building blocks are the regular expressions that match a single character.
       Most characters, including all letters and digits,  are  regular  expressions  that  match
       themselves.   Any meta-character with special meaning may be quoted by preceding it with a
       backslash.

       The period . matches any single character.

   Character Classes and Bracket Expressions
       A bracket expression is a list of characters enclosed by [ and ].  It matches  any  single
       character  in that list; if the first character of the list is the caret ^ then it matches
       any character not in the list.  For example, the regular expression  [0123456789]  matches
       any single digit.

       Within  a bracket expression, a range expression consists of two characters separated by a
       hyphen.  It matches any single character that sorts between the two characters, inclusive,
       using  the  locale's  collating sequence and character set.  For example, in the default C
       locale, [a-d] is equivalent to [abcd].  Many locales sort characters in dictionary  order,
       and  in  these locales [a-d] is typically not equivalent to [abcd]; it might be equivalent
       to  [aBbCcDd],  for  example.   To  obtain  the  traditional  interpretation  of   bracket
       expressions,  you  can  use the C locale by setting the LC_ALL environment variable to the
       value C.

       Finally, certain named classes of characters are predefined within bracket expressions, as
       follows.   Their names are self explanatory, and they are [:alnum:], [:alpha:], [:cntrl:],
       [:digit:],  [:graph:],  [:lower:],  [:print:],  [:punct:],   [:space:],   [:upper:],   and
       [:xdigit:].   For example, [[:alnum:]] means the character class of numbers and letters in
       the current locale. In the C locale and ASCII character set encoding, this is the same  as
       [0-9A-Za-z].  (Note that the brackets in these class names are part of the symbolic names,
       and must be included in addition to the brackets delimiting the bracket expression.)  Most
       meta-characters  lose  their  special  meaning  inside  bracket expressions.  To include a
       literal ] place it first in the list.  Similarly, to include a literal ^ place it anywhere
       but first.  Finally, to include a literal - place it last.

   Anchoring
       The  caret  ^  and the dollar sign $ are meta-characters that respectively match the empty
       string at the beginning and end of a line.

   The Backslash Character and Special Expressions
       The symbols \< and \> respectively match the empty string at the beginning and  end  of  a
       word.   The  symbol  \b matches the empty string at the edge of a word, and \B matches the
       empty string provided it's not at the edge of a word.  The symbol  \w  is  a  synonym  for
       [_[:alnum:]] and \W is a synonym for [^_[:alnum:]].

   Repetition
       A regular expression may be followed by one of several repetition operators:
       ?      The preceding item is optional and matched at most once.
       *      The preceding item will be matched zero or more times.
       +      The preceding item will be matched one or more times.
       {n}    The preceding item is matched exactly n times.
       {n,}   The preceding item is matched n or more times.
       {,m}   The preceding item is matched at most m times.  This is a GNU extension.
       {n,m}  The preceding item is matched at least n times, but not more than m times.

   Concatenation
       Two  regular expressions may be concatenated; the resulting regular expression matches any
       string formed by concatenating two substrings that  respectively  match  the  concatenated
       expressions.

   Alternation
       Two  regular  expressions  may  be  joined  by the infix operator |; the resulting regular
       expression matches any string matching either alternate expression.

   Precedence
       Repetition takes precedence over  concatenation,  which  in  turn  takes  precedence  over
       alternation.   A  whole  expression  may  be  enclosed  in  parentheses  to override these
       precedence rules and form a subexpression.

   Back References and Subexpressions
       The back-reference \n, where n is a single digit, matches the substring previously matched
       by the nth parenthesized subexpression of the regular expression.

   Basic vs Extended Regular Expressions
       In  basic  regular expressions the meta-characters ?, +, {, |, (, and ) lose their special
       meaning; instead use the backslashed versions \?, \+, \{, \|, \(, and \).

       Traditional egrep did not support the { meta-character,  and  some  egrep  implementations
       support  \{ instead, so portable scripts should avoid { in grep -E patterns and should use
       [{] to match a literal {.

       GNU grep -E attempts to support traditional usage by assuming that { is not special if  it
       would  be  the  start  of  an  invalid  interval  specification.  For example, the command
       grep -E '{1' searches for the two-character string {1 instead of reporting a syntax  error
       in  the  regular  expression.   POSIX  allows  this behavior as an extension, but portable
       scripts should avoid it.

ENVIRONMENT VARIABLES
       The behavior of grep is affected by the following environment variables.

       The locale for category LC_foo is specified by examining the three  environment  variables
       LC_ALL,  LC_foo,  LANG, in that order.  The first of these variables that is set specifies
       the locale.  For example, if LC_ALL is not set, but LC_MESSAGES is set to pt_BR, then  the
       Brazilian Portuguese locale is used for the LC_MESSAGES category.  The C locale is used if
       none of these environment variables are set, if the locale catalog is not installed, or if
       grep was not compiled with national language support (NLS).

       GREP_OPTIONS
              This  variable  specifies  default  options  to  be placed in front of any explicit
              options.    For   example,   if   GREP_OPTIONS   is   '--binary-files=without-match
              --directories=skip',  grep  behaves  as  if the two options --binary-files=without-
              match and --directories=skip  had  been  specified  before  any  explicit  options.
              Option  specifications  are  separated by whitespace.  A backslash escapes the next
              character, so it can be used to  specify  an  option  containing  whitespace  or  a
              backslash.

       GREP_COLOR
              This  variable  specifies the color used to highlight matched (non-empty) text.  It
              is deprecated in favor of GREP_COLORS, but still supported.  The  mt,  ms,  and  mc
              capabilities  of  GREP_COLORS have priority over it.  It can only specify the color
              used to highlight the matching non-empty text in any matching line (a selected line
              when  the  -v  command-line  option  is  omitted,  or  a  context  line  when -v is
              specified).  The default is 01;31, which means a bold red foreground  text  on  the
              terminal's default background.

       GREP_COLORS
              Specifies  the  colors  and other attributes used to highlight various parts of the
              output.  Its value is a colon-separated  list  of  capabilities  that  defaults  to
              ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36   with  the  rv  and  ne  boolean
              capabilities omitted (i.e., false).  Supported capabilities are as follows.

              sl=    SGR substring for whole selected lines (i.e., matching  lines  when  the  -v
                     command-line option is omitted, or non-matching lines when -v is specified).
                     If however the boolean rv capability and the -v command-line option are both
                     specified,  it  applies  to  context matching lines instead.  The default is
                     empty (i.e., the terminal's default color pair).

              cx=    SGR substring for whole context lines (i.e., non-matching lines when the  -v
                     command-line option is omitted, or matching lines when -v is specified).  If
                     however the boolean rv capability and the -v command-line  option  are  both
                     specified,  it  applies to selected non-matching lines instead.  The default
                     is empty (i.e., the terminal's default color pair).

              rv     Boolean value that  reverses  (swaps)  the  meanings  of  the  sl=  and  cx=
                     capabilities  when  the -v command-line option is specified.  The default is
                     false (i.e., the capability is omitted).

              mt=01;31
                     SGR substring for matching non-empty text in  any  matching  line  (i.e.,  a
                     selected  line when the -v command-line option is omitted, or a context line
                     when -v is specified).  Setting this is equivalent to setting both  ms=  and
                     mc=  at  once  to the same value.  The default is a bold red text foreground
                     over the current line background.

              ms=01;31
                     SGR substring for matching non-empty text in a selected line.  (This is only
                     used when the -v command-line option is omitted.)  The effect of the sl= (or
                     cx= if rv) capability remains active when this kicks in.  The default  is  a
                     bold red text foreground over the current line background.

              mc=01;31
                     SGR  substring for matching non-empty text in a context line.  (This is only
                     used when the -v command-line option is specified.)  The effect of  the  cx=
                     (or sl= if rv) capability remains active when this kicks in.  The default is
                     a bold red text foreground over the current line background.

              fn=35  SGR substring for file names prefixing any content line.  The default  is  a
                     magenta text foreground over the terminal's default background.

              ln=32  SGR substring for line numbers prefixing any content line.  The default is a
                     green text foreground over the terminal's default background.

              bn=32  SGR substring for byte offsets prefixing any content line.  The default is a
                     green text foreground over the terminal's default background.

              se=36  SGR  substring for separators that are inserted between selected line fields
                     (:), between context line fields, (-), and between groups of adjacent  lines
                     when  nonzero  context  is  specified  (--).   The  default  is  a cyan text
                     foreground over the terminal's default background.

              ne     Boolean value that prevents clearing to the end of line using Erase in  Line
                     (EL)  to  Right  (\33[K) each time a colorized item ends.  This is needed on
                     terminals on which EL is not supported.  It is otherwise useful on terminals
                     for  which  the  back_color_erase (bce) boolean terminfo capability does not
                     apply, when the chosen highlight colors do not  affect  the  background,  or
                     when EL is too slow or causes too much flicker.  The default is false (i.e.,
                     the capability is omitted).

              Note that boolean capabilities have no =...  part.  They are omitted (i.e.,  false)
              by default and become true when specified.

              See  the  Select  Graphic  Rendition (SGR) section in the documentation of the text
              terminal that  is  used  for  permitted  values  and  their  meaning  as  character
              attributes.   These substring values are integers in decimal representation and can
              be concatenated with semicolons.  grep takes care of assembling the result  into  a
              complete SGR sequence (\33[...m).  Common values to concatenate include 1 for bold,
              4 for underline, 5 for blink, 7 for inverse, 39 for default foreground color, 30 to
              37  for  foreground colors, 90 to 97 for 16-color mode foreground colors, 38;5;0 to
              38;5;255 for 88-color  and  256-color  modes  foreground  colors,  49  for  default
              background  color,  40  to  47  for background colors, 100 to 107 for 16-color mode
              background colors,  and  48;5;0  to  48;5;255  for  88-color  and  256-color  modes
              background colors.

       LC_ALL, LC_COLLATE, LANG
              These  variables  specify  the locale for the LC_COLLATE category, which determines
              the collating sequence used to interpret range expressions like [a-z].

       LC_ALL, LC_CTYPE, LANG
              These variables specify the locale for the LC_CTYPE category, which determines  the
              type of characters, e.g., which characters are whitespace.

       LC_ALL, LC_MESSAGES, LANG
              These  variables  specify the locale for the LC_MESSAGES category, which determines
              the language that grep uses for messages.   The  default  C  locale  uses  American
              English messages.

       POSIXLY_CORRECT
              If set, grep behaves as POSIX requires; otherwise, grep behaves more like other GNU
              programs.  POSIX requires that options that follow file names must  be  treated  as
              file  names; by default, such options are permuted to the front of the operand list
              and are treated as options.  Also, POSIX  requires  that  unrecognized  options  be
              diagnosed  as  “illegal”, but since they are not really against the law the default
              is   to   diagnose   them   as   “invalid”.     POSIXLY_CORRECT    also    disables
              _N_GNU_nonoption_argv_flags_, described below.

       _N_GNU_nonoption_argv_flags_
              (Here  N  is  grep's numeric process ID.)  If the ith character of this environment
              variable's value is 1, do not consider the ith operand of grep  to  be  an  option,
              even if it appears to be one.  A shell can put this variable in the environment for
              each command it runs, specifying which  operands  are  the  results  of  file  name
              wildcard  expansion  and therefore should not be treated as options.  This behavior
              is available only with the GNU C library, and only when POSIXLY_CORRECT is not set.

EXIT STATUS
       Normally, the exit status is 0 if selected lines are found and 1 otherwise.  But the  exit
       status  is 2 if an error occurred, unless the -q or --quiet or --silent option is used and
       a selected line is found.  Note, however, that POSIX only mandates, for programs  such  as
       grep,  cmp,  and  diff,  that  the  exit  status in case of error be greater than 1; it is
       therefore advisable, for the sake of portability, to use logic that tests for this general
       condition instead of strict equality with 2.

COPYRIGHT
       Copyright 1998-2000, 2002, 2005-2014 Free Software Foundation, Inc.

       This  is  free software; see the source for copying conditions.  There is NO warranty; not
       even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

BUGS
   Reporting Bugs
       Email  bug  reports  to  <bug-grep@gnu.org>,  a   mailing   list   whose   web   page   is
       <http://lists.gnu.org/mailman/listinfo/bug-grep>.   grep's Savannah bug tracker is located
       at <http://savannah.gnu.org/bugs/?group=grep>.

   Known Bugs
       Large repetition counts in the {n,m} construct may cause grep to use lots of  memory.   In
       addition,  certain  other  obscure regular expressions require exponential time and space,
       and may cause grep to run out of memory.

       Back-references are very slow, and may require exponential time.

SEE ALSO
   Regular Manual Pages
       awk(1), cmp(1), diff(1), find(1), gzip(1), perl(1), sed(1), sort(1),  xargs(1),  zgrep(1),
       read(2), pcre(3), pcresyntax(3), pcrepattern(3), terminfo(5), glob(7), regex(7).

   POSIX Programmer's Manual Page
       grep(1p).

   TeXinfo Documentation
       The  full  documentation for grep is maintained as a TeXinfo manual, which you can read at
       http://www.gnu.org/software/grep/manual/.  If the info  and  grep  programs  are  properly
       installed at your site, the command

              info grep

       should give you access to the complete manual.

NOTES
       This  man  page  is  maintained only fitfully; the full documentation is often more up-to-
       date.

       GNU's not Unix, but Unix is a beast; its plural form is Unixen.



User Commands                             GNU grep 2.20                                   GREP(1)
VIM(1)                               General Commands Manual                               VIM(1)



NAME
       vim - Vi IMproved, a programmers text editor

SYNOPSIS
       vim [options] [file ..]
       vim [options] -
       vim [options] -t tag
       vim [options] -q [errorfile]

       ex gex
       view
       gvim gview vimx evim eview
       rvim rview rgvim rgview

DESCRIPTION
       Vim  is  a text editor that is upwards compatible to Vi.  It can be used to edit all kinds
       of plain text.  It is especially useful for editing programs.

       There are a lot of enhancements above Vi: multi level undo,  multi  windows  and  buffers,
       syntax  highlighting,  command  line  editing,  filename  completion, on-line help, visual
       selection, etc..  See ":help vi_diff.txt" for a summary of the differences between Vim and
       Vi.

       While  running  Vim  a  lot of help can be obtained from the on-line help system, with the
       ":help" command.  See the ON-LINE HELP section below.

       Most often Vim is started to edit a single file with the command

            vim file

       More generally Vim is started with:

            vim [options] [filelist]

       If the filelist is missing, the editor will start with an empty buffer.  Otherwise exactly
       one out of the following four may be used to choose one or more files to be edited.

       file ..     A list of filenames.  The first one will be the current file and read into the
                   buffer.  The cursor will be positioned on the first line of the  buffer.   You
                   can  get  to  the  other  files with the ":next" command.  To edit a file that
                   starts with a dash, precede the filelist with "--".

       -           The file to edit is read from stdin.  Commands are  read  from  stderr,  which
                   should be a TTY.

       -t {tag}    The file to edit and the initial cursor position depends on a "tag", a sort of
                   goto label.  {tag} is looked up in the tags file, the associated file  becomes
                   the  current file and the associated command is executed.  Mostly this is used
                   for C programs, in which case {tag} could be a function name.  The  effect  is
                   that the file containing that function becomes the current file and the cursor
                   is positioned on the start of the function.  See ":help tag-commands".

       -q [errorfile]
                   Start in quickFix mode.  The file [errorfile] is read and the first  error  is
                   displayed.   If  [errorfile]  is  omitted,  the  filename is obtained from the
                   'errorfile' option (defaults to "AztecC.Err" for the  Amiga,  "errors.err"  on
                   other  systems).  Further errors can be jumped to with the ":cn" command.  See
                   ":help quickfix".

       Vim behaves differently, depending on the name of the command (the executable may still be
       the same file).

       vim       The "normal" way, everything is default.

       ex        Start  in  Ex mode.  Go to Normal mode with the ":vi" command.  Can also be done
                 with the "-e" argument.

       view      Start in read-only mode.  You will be protected from  writing  the  files.   Can
                 also be done with the "-R" argument.

       gvim gview
                 The GUI version.  Starts a new window.

       gex       Starts  a new gvim window in Ex mode. Can also be done with the "-e" argument to
                 gvim

       vimx      Starts gvim in "Vi" mode similar to "vim", but  with  additional  features  like
                 xterm clipboard support

       evim eview
                 The  GUI  version in easy mode.  Starts a new window.  Can also be done with the
                 "-y" argument.

       rvim rview rgvim rgview
                 Like the above, but with restrictions.  It will not be possible to  start  shell
                 commands, or suspend Vim.  Can also be done with the "-Z" argument.

OPTIONS
       The  options  may  be  given  in any order, before or after filenames.  Options without an
       argument can be combined after a single dash.

       +[num]      For the first file the cursor will be positioned on line "num".  If  "num"  is
                   missing, the cursor will be positioned on the last line.

       +/{pat}     For  the  first  file the cursor will be positioned on the first occurrence of
                   {pat}.  See ":help search-pattern" for the available search patterns.

       +{command}

       -c {command}
                   {command} will be executed after the first file has been read.   {command}  is
                   interpreted  as  an  Ex  command.  If the {command} contains spaces it must be
                   enclosed in double quotes (this depends on the shell that is used).   Example:
                   Vim "+set si" main.c
                   Note: You can use up to 10 "+" or "-c" commands.

       -S {file}   {file} will be sourced after the first file has been read.  This is equivalent
                   to -c "source {file}".  {file} cannot start with '-'.  If  {file}  is  omitted
                   "Session.vim" is used (only works when -S is the last argument).

       --cmd {command}
                   Like  using "-c", but the command is executed just before processing any vimrc
                   file.  You can use up to 10 of these commands, independently  from  "-c"  com‐
                   mands.

       -A          If  Vim  has  been compiled with ARABIC support for editing right-to-left ori‐
                   ented files and Arabic keyboard mapping, this  option  starts  Vim  in  Arabic
                   mode,  i.e.  'arabic'  is  set.   Otherwise  an error message is given and Vim
                   aborts.

       -b          Binary mode.  A few options will be set that  makes  it  possible  to  edit  a
                   binary or executable file.

       -C          Compatible.   Set  the  'compatible' option.  This will make Vim behave mostly
                   like Vi, even though a .vimrc file exists.

       -d          Start in diff mode.  There should be two, three or four file  name  arguments.
                   Vim  will  open  all  the files and show differences between them.  Works like
                   vimdiff(1).

       -d {device} Open {device} for use as  a  terminal.   Only  on  the  Amiga.   Example:  "-d
                   con:20/30/600/150".

       -D          Debugging.   Go  to  debugging  mode  when  executing the first command from a
                   script.

       -e          Start Vim in Ex mode, just like the executable was called "ex".

       -E          Start Vim in improved Ex mode, just like the executable was called "exim".

       -f          Foreground.  For the GUI version, Vim will not fork and detach from the  shell
                   it  was  started in.  On the Amiga, Vim is not restarted to open a new window.
                   This option should be used when Vim is executed by a program  that  will  wait
                   for  the  edit session to finish (e.g. mail).  On the Amiga the ":sh" and ":!"
                   commands will not work.

       --nofork    Foreground.  For the GUI version, Vim will not fork and detach from the  shell
                   it was started in.

       -F          If Vim has been compiled with FKMAP support for editing right-to-left oriented
                   files and Farsi keyboard mapping, this option starts Vim in Farsi  mode,  i.e.
                   'fkmap'  and 'rightleft' are set.  Otherwise an error message is given and Vim
                   aborts.

       -g          If Vim has been compiled with GUI support, this option enables the GUI.  If no
                   GUI support was compiled in, an error message is given and Vim aborts.

       -h          Give  a  bit of help about the command line arguments and options.  After this
                   Vim exits.

       -H          If Vim has been compiled with RIGHTLEFT support for editing right-to-left ori‐
                   ented  files  and  Hebrew  keyboard  mapping, this option starts Vim in Hebrew
                   mode, i.e. 'hkmap' and 'rightleft' are set.  Otherwise  an  error  message  is
                   given and Vim aborts.

       -i {viminfo}
                   When  using the viminfo file is enabled, this option sets the filename to use,
                   instead of the default "~/.viminfo".  This can also be used to skip the use of
                   the .viminfo file, by giving the name "NONE".

       -L          Same as -r.

       -l          Lisp mode.  Sets the 'lisp' and 'showmatch' options on.

       -m          Modifying files is disabled.  Resets the 'write' option.  You can still modify
                   the buffer, but writing a file is not possible.

       -M          Modifications not allowed.  The  'modifiable'  and  'write'  options  will  be
                   unset,  so  that  changes  are not allowed and files can not be written.  Note
                   that these options can be set to enable making modifications.

       -N          No-compatible mode.  Reset the 'compatible' option.  This will make Vim behave
                   a  bit  better,  but  less  Vi  compatible, even though a .vimrc file does not
                   exist.

       -n          No swap file will be used.  Recovery after a crash will be impossible.   Handy
                   if  you  want to edit a file on a very slow medium (e.g. floppy).  Can also be
                   done with ":set uc=0".  Can be undone with ":set uc=200".

       -nb         Become an editor server for NetBeans.  See the docs for details.

       -o[N]       Open N windows stacked.  When N is omitted, open one window for each file.

       -O[N]       Open N windows side by side.  When N is omitted,  open  one  window  for  each
                   file.

       -p[N]       Open N tab pages.  When N is omitted, open one tab page for each file.

       -R          Read-only  mode.   The  'readonly' option will be set.  You can still edit the
                   buffer, but will be prevented from accidentally overwriting a file.  If you do
                   want  to  overwrite  a  file, add an exclamation mark to the Ex command, as in
                   ":w!".  The -R option also implies the -n option (see below).  The  'readonly'
                   option can be reset with ":set noro".  See ":help 'readonly'".

       -r          List swap files, with information about using them for recovery.

       -r {file}   Recovery  mode.   The  swap file is used to recover a crashed editing session.
                   The swap file is a file with the same filename as the text  file  with  ".swp"
                   appended.  See ":help recovery".

       -s          Silent  mode.   Only  when  started  as "Ex" or when the "-e" option was given
                   before the "-s" option.

       -s {scriptin}
                   The script file {scriptin} is read.  The characters in  the  file  are  inter‐
                   preted  as  if  you  had  typed  them.   The same can be done with the command
                   ":source! {scriptin}".  If the end of the file is reached  before  the  editor
                   exits, further characters are read from the keyboard.

       -T {terminal}
                   Tells  Vim  the  name  of  the terminal you are using.  Only required when the
                   automatic way doesn't work.  Should be a terminal known to  Vim  (builtin)  or
                   defined in the termcap or terminfo file.

       -u {vimrc}  Use  the commands in the file {vimrc} for initializations.  All the other ini‐
                   tializations are skipped.  Use this to edit a special kind of files.   It  can
                   also  be  used  to  skip  all  initializations by giving the name "NONE".  See
                   ":help initialization" within vim for more details.

       -U {gvimrc} Use the commands in the file {gvimrc} for GUI initializations.  All the  other
                   GUI initializations are skipped.  It can also be used to skip all GUI initial‐
                   izations by giving the name "NONE".  See ":help gui-init" within vim for  more
                   details.

       -V[N]       Verbose.   Give  messages  about  which  files are sourced and for reading and
                   writing a viminfo file.  The optional number N is  the  value  for  'verbose'.
                   Default is 10.

       -v          Start Vim in Vi mode, just like the executable was called "vi".  This only has
                   effect when the executable is called "ex".

       -w {scriptout}
                   All the characters that you type are recorded in the file  {scriptout},  until
                   you  exit  Vim.  This is useful if you want to create a script file to be used
                   with "vim -s" or ":source!".  If the {scriptout} file exists,  characters  are
                   appended.

       -W {scriptout}
                   Like -w, but an existing file is overwritten.

       -x          Use encryption when writing files.  Will prompt for a crypt key.

       -X          Don't  connect  to the X server.  Shortens startup time in a terminal, but the
                   window title and clipboard will not be used.

       -y          Start Vim in easy mode, just like the executable was called "evim" or "eview".
                   Makes Vim behave like a click-and-type editor.

       -Z          Restricted mode.  Works like the executable starts with "r".

       --          Denotes  the  end  of  the options.  Arguments after this will be handled as a
                   file name.  This can be used to edit a filename that starts with a '-'.

       --echo-wid  GTK GUI only: Echo the Window ID on stdout.

       --help      Give a help message and exit, just like "-h".

       --literal   Take file name arguments literally, do not  expand  wildcards.   This  has  no
                   effect on Unix where the shell expands wildcards.

       --noplugin  Skip loading plugins.  Implied by -u NONE.

       --remote    Connect  to  a  Vim server and make it edit the files given in the rest of the
                   arguments.  If no server is found a warning is given and the files are  edited
                   in the current Vim.

       --remote-expr {expr}
                   Connect to a Vim server, evaluate {expr} in it and print the result on stdout.

       --remote-send {keys}
                   Connect to a Vim server and send {keys} to it.

       --remote-silent
                   As --remote, but without the warning when no server is found.

       --remote-wait
                   As --remote, but Vim does not exit until the files have been edited.

       --remote-wait-silent
                   As --remote-wait, but without the warning when no server is found.

       --remote-tab[-wait][-silent]
                   As --remote but use tab page per file

       --role      Set a unique role to identify the main window

       --serverlist
                   List the names of all Vim servers that can be found.

       --servername {name}
                   Use  {name}  as the server name.  Used for the current Vim, unless used with a
                   --remote argument, then it's the name of the server to connect to.

       --socketid {id}
                   GTK GUI only: Use the GtkPlug mechanism to run gvim in another window.

       --version   Print version information and exit.

ON-LINE HELP
       Type ":help" in Vim to get started.  Type ":help subject" to get help on a  specific  sub‐
       ject.   For example: ":help ZZ" to get help for the "ZZ" command.  Use <Tab> and CTRL-D to
       complete subjects (":help cmdline-completion").  Tags are present to jump from  one  place
       to  another (sort of hypertext links, see ":help").  All documentation files can be viewed
       in this way, for example ":help syntax.txt".

FILES
       /usr/share/vim/vim74/doc/*.txt
                      The Vim documentation files.  Use ":help doc-file-list" to get the complete
                      list.

       /usr/share/vim/vim74/doc/tags
                      The tags file used for finding information in the documentation files.

       /usr/share/vim/vim74/syntax/syntax.vim
                      System wide syntax initializations.

       /usr/share/vim/vim74/syntax/*.vim
                      Syntax files for various languages.

       /etc/vimrc     System wide Vim initializations.

       ~/.vimrc       Your personal Vim initializations.

       /etc/gvimrc    System wide gvim initializations.

       ~/.gvimrc      Your personal gvim initializations.

       /usr/share/vim/vim74/optwin.vim
                      Script used for the ":options" command, a nice way to view and set options.

       /usr/share/vim/vim74/menu.vim
                      System wide menu initializations for gvim.

       /usr/share/vim/vim74/bugreport.vim
                      Script to generate a bug report.  See ":help bugs".

       /usr/share/vim/vim74/filetype.vim
                      Script to detect the type of a file by its name.  See ":help 'filetype'".

       /usr/share/vim/vim74/scripts.vim
                      Script  to  detect  the  type of a file by its contents.  See ":help 'file‐
                      type'".

       /usr/share/vim/vim74/print/*.ps
                      Files used for PostScript printing.

       For recent info read the VIM home page:
       <URL:http://www.vim.org/>

SEE ALSO
       vimtutor(1)

AUTHOR
       Most of Vim was made by Bram Moolenaar, with a lot of help from others.  See ":help  cred‐
       its" in Vim.
       Vim  is  based on Stevie, worked on by: Tim Thompson, Tony Andrews and G.R. (Fred) Walter.
       Although hardly any of the original code remains.

BUGS
       Probably.  See ":help todo" for a list of known problems.

       Note that a number of things that may be regarded as bugs by some, are in fact caused by a
       too-faithful  reproduction  of  Vi's  behaviour.   And  if you think other things are bugs
       "because Vi does it differently", you should take a closer look at  the  vi_diff.txt  file
       (or  type :help vi_diff.txt when in Vim).  Also have a look at the 'compatible' and 'cpop‐
       tions' options.



                                           2006 Apr 11                                     VIM(1)
SORT(1)                                   User Commands                                   SORT(1)



NAME
       sort - sort lines of text files

SYNOPSIS
       sort [OPTION]... [FILE]...
       sort [OPTION]... --files0-from=F

DESCRIPTION
       Write sorted concatenation of all FILE(s) to standard output.

       Mandatory  arguments  to  long  options  are  mandatory  for  short options too.  Ordering
       options:

       -b, --ignore-leading-blanks
              ignore leading blanks

       -d, --dictionary-order
              consider only blanks and alphanumeric characters

       -f, --ignore-case
              fold lower case to upper case characters

       -g, --general-numeric-sort
              compare according to general numerical value

       -i, --ignore-nonprinting
              consider only printable characters

       -M, --month-sort
              compare (unknown) < 'JAN' < ... < 'DEC'

       -h, --human-numeric-sort
              compare human readable numbers (e.g., 2K 1G)

       -n, --numeric-sort
              compare according to string numerical value

       -R, --random-sort
              sort by random hash of keys

       --random-source=FILE
              get random bytes from FILE

       -r, --reverse
              reverse the result of comparisons

       --sort=WORD
              sort according to WORD: general-numeric -g, human-numeric -h, month -M, numeric -n,
              random -R, version -V

       -V, --version-sort
              natural sort of (version) numbers within text

       Other options:

       --batch-size=NMERGE
              merge at most NMERGE inputs at once; for more use temp files

       -c, --check, --check=diagnose-first
              check for sorted input; do not sort

       -C, --check=quiet, --check=silent
              like -c, but do not report first bad line

       --compress-program=PROG
              compress temporaries with PROG; decompress them with PROG -d

       --debug
              annotate  the  part  of the line used to sort, and warn about questionable usage to
              stderr

       --files0-from=F
              read input from the files specified by NUL-terminated names in file F; If  F  is  -
              then read names from standard input

       -k, --key=KEYDEF
              sort via a key; KEYDEF gives location and type

       -m, --merge
              merge already sorted files; do not sort

       -o, --output=FILE
              write result to FILE instead of standard output

       -s, --stable
              stabilize sort by disabling last-resort comparison

       -S, --buffer-size=SIZE
              use SIZE for main memory buffer

       -t, --field-separator=SEP
              use SEP instead of non-blank to blank transition

       -T, --temporary-directory=DIR
              use  DIR  for  temporaries,  not $TMPDIR or /tmp; multiple options specify multiple
              directories

       --parallel=N
              change the number of sorts run concurrently to N

       -u, --unique
              with -c, check for strict ordering; without -c, output only the first of  an  equal
              run

       -z, --zero-terminated
              end lines with 0 byte, not newline

       --help display this help and exit

       --version
              output version information and exit

       KEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a field number
       and C a character position in the field; both are origin 1, and the stop position defaults
       to  the  line's end.  If neither -t nor -b is in effect, characters in a field are counted
       from the beginning of the preceding whitespace.  OPTS is one or more single-letter  order‐
       ing options [bdfgiMhnRrV], which override global ordering options for that key.  If no key
       is given, use the entire line as the key.

       SIZE may be followed by the following multiplicative suffixes: % 1% of memory, b 1, K 1024
       (default), and so on for M, G, T, P, E, Z, Y.

       With no FILE, or when FILE is -, read standard input.

       ***  WARNING *** The locale specified by the environment affects sort order.  Set LC_ALL=C
       to get the traditional sort order that uses native byte values.

       GNU coreutils online help: <http://www.gnu.org/software/coreutils/> Report  sort  transla‐
       tion bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Mike Haertel and Paul Eggert.

COPYRIGHT
       Copyright  ©  2013  Free  Software  Foundation, Inc.  License GPLv3+: GNU GPL version 3 or
       later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO  WARRANTY,
       to the extent permitted by law.

SEE ALSO
       uniq(1)

       The  full  documentation for sort is maintained as a Texinfo manual.  If the info and sort
       programs are properly installed at your site, the command

              info coreutils 'sort invocation'

       should give you access to the complete manual.



GNU coreutils 8.22                        November 2020                                   SORT(1)
TIME(1)                                Linux User's Manual                                TIME(1)



NAME
       time - time a simple command or give resource usage

SYNOPSIS
       time [options] command [arguments...]

DESCRIPTION
       The  time  command runs the specified program command with the given arguments.  When com‐
       mand finishes, time writes a message to standard error giving timing statistics about this
       program run.  These statistics consist of (i) the elapsed real time between invocation and
       termination, (ii) the user CPU time (the sum of the tms_utime and tms_cutime values  in  a
       struct  tms  as  returned  by  times(2)),  and  (iii)  the system CPU time (the sum of the
       tms_stime and tms_cstime values in a struct tms as returned by times(2)).

       Note: some shells (e.g., bash(1)) have a built-in time command that  provides  less  func‐
       tionality  than  the  command described here.  To access the real command, you may need to
       specify its pathname (something like /usr/bin/time).

OPTIONS
       -p     When in the POSIX locale, use the precise traditional format

                  "real %f\nuser %f\nsys %f\n"

              (with numbers in seconds) where the number of decimals in  the  output  for  %f  is
              unspecified but is sufficient to express the clock tick accuracy, and at least one.

EXIT STATUS
       If  command  was invoked, the exit status is that of command.  Otherwise it is 127 if com‐
       mand could not be found, 126 if it could be found but could not be invoked, and some other
       nonzero value (1-125) if something else went wrong.

ENVIRONMENT
       The variables LANG, LC_ALL, LC_CTYPE, LC_MESSAGES, LC_NUMERIC, NLSPATH, and PATH are used.
       The last one to search for command.  The remaining ones for the text and formatting of the
       output.

GNU VERSION
       Below a description of the GNU 1.7 version of time.  Disregarding the name of the utility,
       GNU makes it output lots of useful information, not only about  time  used,  but  also  on
       other resources like memory, I/O and IPC calls (where available).  The output is formatted
       using a format string that can be specified using the -f option or  the  TIME  environment
       variable.

       The default format string is:

           %Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k
           %Iinputs+%Ooutputs (%Fmajor+%Rminor)pagefaults %Wswaps

       When the -p option is given the (portable) output format

           real %e
           user %U
           sys %S

       is used.

   The format string
       The  format is interpreted in the usual printf-like way.  Ordinary characters are directly
       copied, tab, newline and backslash are escaped using \t, \n and \\, a percent sign is rep‐
       resented  by %%, and otherwise % indicates a conversion.  The program time will always add
       a trailing newline itself.  The conversions follow.  All of those used by tcsh(1) are sup‐
       ported.

       Time

       %E     Elapsed real time (in [hours:]minutes:seconds).

       %e     (Not in tcsh.) Elapsed real time (in seconds).

       %S     Total number of CPU-seconds that the process spent in kernel mode.

       %U     Total number of CPU-seconds that the process spent in user mode.

       %P     Percentage of the CPU that this job got, computed as (%U + %S) / %E.

       Memory

       %M     Maximum resident set size of the process during its lifetime, in Kbytes.

       %t     (Not in tcsh.) Average resident set size of the process, in Kbytes.

       %K     Average total (data+stack+text) memory use of the process, in Kbytes.

       %D     Average size of the process's unshared data area, in Kbytes.

       %p     (Not in tcsh.) Average size of the process's unshared stack space, in Kbytes.

       %X     Average size of the process's shared text space, in Kbytes.

       %Z     (Not  in  tcsh.)  System's page size, in bytes.  This is a per-system constant, but
              varies between systems.

       %F     Number of major page faults that occurred while the process was running.  These are
              faults where the page has to be read in from disk.

       %R     Number  of minor, or recoverable, page faults.  These are faults for pages that are
              not valid but which have not yet been claimed by other  virtual  pages.   Thus  the
              data in the page is still valid but the system tables must be updated.

       %W     Number of times the process was swapped out of main memory.

       %c     Number  of  times  the process was context-switched involuntarily (because the time
              slice expired).

       %w     Number of waits: times that  the  program  was  context-switched  voluntarily,  for
              instance while waiting for an I/O operation to complete.

       I/O

       %I     Number of file system inputs by the process.

       %O     Number of file system outputs by the process.

       %r     Number of socket messages received by the process.

       %s     Number of socket messages sent by the process.

       %k     Number of signals delivered to the process.

       %C     (Not in tcsh.) Name and command-line arguments of the command being timed.

       %x     (Not in tcsh.) Exit status of the command.

   GNU options
       -f FORMAT, --format=FORMAT
              Specify  output format, possibly overriding the format specified in the environment
              variable TIME.

       -p, --portability
              Use the portable output format.

       -o FILE, --output=FILE
              Do not send the results to stderr, but overwrite the specified file.

       -a, --append
              (Used together with -o.) Do not overwrite but append.

       -v, --verbose
              Give very verbose output about all the program knows about.

   GNU standard options
       --help Print a usage message on standard output and exit successfully.

       -V, --version
              Print version information on standard output, then exit successfully.

       --     Terminate option list.

BUGS
       Not all resources are measured by all versions of UNIX, so some of  the  values  might  be
       reported  as  zero.  The present selection was mostly inspired by the data provided by 4.2
       or 4.3BSD.

       GNU time version 1.7 is not yet localized.  Thus, it does not implement the POSIX require‐
       ments.

       The  environment variable TIME was badly chosen.  It is not unusual for systems like auto‐
       conf(1) or make(1) to use environment variables with the name of a utility to override the
       utility  to  be  used.  Uses like MORE or TIME for options to programs (instead of program
       pathnames) tend to lead to difficulties.

       It seems unfortunate that -o overwrites instead of  appends.   (That  is,  the  -a  option
       should be the default.)

       Mail suggestions and bug reports for GNU time to
       bug-utils@prep.ai.mit.edu
       Please include the version of time, which you can get by running
       time --version
       and the operating system and C compiler you used.

SEE ALSO
       tcsh(1), times(2), wait3(2)

COLOPHON
       This  page  is  part of release 3.53 of the Linux man-pages project.  A description of the
       project,    and    information    about    reporting    bugs,    can    be    found     at
       http://www.kernel.org/doc/man-pages/.



                                            2008-11-14                                    TIME(1)
WHOAMI(1)                                 User Commands                                 WHOAMI(1)



NAME
       whoami - print effective userid

SYNOPSIS
       whoami [OPTION]...

DESCRIPTION
       Print the user name associated with the current effective user ID.  Same as id -un.

       --help display this help and exit

       --version
              output version information and exit

       GNU coreutils online help: <http://www.gnu.org/software/coreutils/> Report whoami transla‐
       tion bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Richard Mlynarik.

COPYRIGHT
       Copyright © 2013 Free Software Foundation, Inc.  License GPLv3+:  GNU  GPL  version  3  or
       later <http://gnu.org/licenses/gpl.html>.
       This  is free software: you are free to change and redistribute it.  There is NO WARRANTY,
       to the extent permitted by law.

SEE ALSO
       The full documentation for whoami is maintained as a Texinfo  manual.   If  the  info  and
       whoami programs are properly installed at your site, the command

              info coreutils 'whoami invocation'

       should give you access to the complete manual.



GNU coreutils 8.22                        November 2020                                 WHOAMI(1)
AT(1)                                General Commands Manual                                AT(1)



NAME
       at, batch, atq, atrm - queue, examine or delete jobs for later execution

SYNOPSIS
       at [-V] [-q queue] [-f file] [-mMlv] timespec...
       at [-V] [-q queue] [-f file] [-mMkv] [-t time]
       at -c job [job...]
       atq [-V] [-q queue]
       at [-rd] job [job...]
       atrm [-V] job [job...]
       batch
       at -b

DESCRIPTION
       at  and  batch  read commands from standard input or a specified file which are to be exe‐
       cuted at a later time, using /bin/sh.

       at      executes commands at a specified time.

       atq     lists the user's pending jobs, unless the user is the  superuser;  in  that  case,
               everybody's  jobs  are  listed.  The format of the output lines (one for each job)
               is: Job number, date, hour, queue, and username.

       atrm    deletes jobs, identified by their job number.

       batch   executes commands when system load levels permit; in other words,  when  the  load
               average drops below 0.8, or the value specified in the invocation of atd.

       At  allows fairly complex time specifications, extending the POSIX.2 standard.  It accepts
       times of the form HH:MM to run a job at a specific time of day.  (If that time is  already
       past, the next day is assumed.)  You may also specify midnight, noon, or teatime (4pm) and
       you can have a time-of-day suffixed with AM or PM  for  running  in  the  morning  or  the
       evening.   You  can  also  say  what day the job will be run, by giving a date in the form
       month-name day  with  an  optional  year,  or  giving  a  date  of  the  form  MMDD[CC]YY,
       MM/DD/[CC]YY,  DD.MM.[CC]YY  or [CC]YY-MM-DD.  The specification of a date must follow the
       specification of the time of day.  You can also give times like now  +  count  time-units,
       where  the time-units can be minutes, hours, days, or weeks and you can tell at to run the
       job today by suffixing the time with today and to run the job tomorrow  by  suffixing  the
       time with tomorrow.

       For example, to run a job at 4pm three days from now, you would do at 4pm + 3 days, to run
       a job at 10:00am on July 31, you would do at 10am Jul 31 and to run a job at 1am tomorrow,
       you would do at 1am tomorrow.

       The  definition  of  the time specification can be found in /usr/share/doc/at-3.1.13/time‐
       spec.

       For both at and batch, commands are read from standard input or the  file  specified  with
       the  -f option and executed.  The working directory, the environment (except for the vari‐
       ables BASH_VERSINFO, DISPLAY, EUID, GROUPS, SHELLOPTS, TERM, UID, and _) and the umask are
       retained from the time of invocation.

       As  at  is  currently  implemented  as a setuid program, other environment variables (e.g.
       LD_LIBRARY_PATH or LD_PRELOAD) are also not exported.  This may change in the future.   As
       a workaround, set these variables explicitly in your job.

       An at - or batch - command invoked from a su(1) shell will retain the current userid.  The
       user will be mailed standard error and standard output from his commands,  if  any.   Mail
       will  be sent using the command /usr/sbin/sendmail.  If at is executed from a su(1) shell,
       the owner of the login shell will receive the mail.

       The superuser may use these commands in any case.  For other users, permission to  use  at
       is determined by the files /etc/at.allow and /etc/at.deny.  See at.allow(5) for details.

OPTIONS
       -V      prints the version number to standard error and exit successfully.

       -q queue
               uses  the specified queue.  A queue designation consists of a single letter; valid
               queue designations range from a to z and A to Z.  The a queue is the  default  for
               at and the b queue for batch.  Queues with higher letters run with increased nice‐
               ness.  The special queue "=" is reserved for jobs which are currently running.

               If a job is submitted to a queue designated with an uppercase letter, the  job  is
               treated as if it were submitted to batch at the time of the job.  Once the time is
               reached, the batch processing rules with respect to load average apply.  If atq is
               given a specific queue, it will only show jobs pending in that queue.

       -m      Send mail to the user when the job has completed even if there was no output.

       -M      Never send mail to the user.

       -f file Reads the job from file rather than standard input.

       -t time run the job at time, given in the format [[CC]YY]MMDDhhmm[.ss]

       -l      Is an alias for atq.

       -r      Is an alias for atrm.

       -d      Is an alias for atrm.

       -b      is an alias for batch.

       -v      Shows the time the job will be executed before reading the job.

               Times displayed will be in the format "Thu Feb 20 14:50:00 1997".

       -c      cats the jobs listed on the command line to standard output.

FILES
       /var/spool/at
       /var/spool/at/spool
       /proc/loadavg
       /var/run/utmp
       /etc/at.allow
       /etc/at.deny

SEE ALSO
       at.allow(5), at.deny(5), atd(8), cron(1), nice(1), sh(1), umask(2).

BUGS
       The correct operation of batch for Linux depends on the presence of a proc- type directory
       mounted on /proc.

       If the file /var/run/utmp is not available or corrupted, or if the user is not  logged  on
       at  the  time at is invoked, the mail is sent to the userid found in the environment vari‐
       able LOGNAME.  If that is undefined or empty, the current userid is assumed.

       At and batch as presently implemented are  not  suitable  when  users  are  competing  for
       resources.   If  this  is the case for your site, you might want to consider another batch
       system, such as nqs.

AUTHOR
       At was mostly written by Thomas Koenig, ig25@rz.uni-karlsruhe.de.



                                            2009-11-14                                      AT(1)
FIND(1)                              General Commands Manual                              FIND(1)



NAME
       find - search for files in a directory hierarchy

SYNOPSIS
       find [-H] [-L] [-P] [-D debugopts] [-Olevel] [path...] [expression]

DESCRIPTION
       This  manual page documents the GNU version of find.  GNU find searches the directory tree
       rooted at each given file name by evaluating the given  expression  from  left  to  right,
       according  to  the rules of precedence (see section OPERATORS), until the outcome is known
       (the left hand side is false for and operations, true for or), at which point  find  moves
       on to the next file name.

       If  you  are  using find in an environment where security is important (for example if you
       are using it to search directories that are writable by other users), you should read  the
       "Security  Considerations" chapter of the findutils documentation, which is called Finding
       Files and comes with findutils.   That document also includes a lot more detail  and  dis‐
       cussion than this manual page, so you may find it a more useful source of information.

OPTIONS
       The -H, -L and -P options control the treatment of symbolic links.  Command-line arguments
       following these are taken to be names of files or directories to be examined,  up  to  the
       first  argument  that  begins with `-', or the argument `(' or `!'.  That argument and any
       following arguments are taken to be the expression describing what is to be searched  for.
       If  no  paths  are  given,  the current directory is used.  If no expression is given, the
       expression -print is used (but you should probably consider using  -print0  instead,  any‐
       way).

       This  manual page talks about `options' within the expression list.  These options control
       the behaviour of find but are specified immediately after the last path  name.   The  five
       `real' options -H, -L, -P, -D and -O must appear before the first path name, if at all.  A
       double dash -- can also be used to signal that any remaining  arguments  are  not  options
       (though ensuring that all start points begin with either `./' or `/' is generally safer if
       you use wildcards in the list of start points).

       -P     Never follow symbolic links.  This is the default behaviour.  When find examines or
              prints  information  a  file, and the file is a symbolic link, the information used
              shall be taken from the properties of the symbolic link itself.


       -L     Follow symbolic links.  When find examines or prints information about  files,  the
              information  used  shall be taken from the properties of the file to which the link
              points, not from the link itself (unless it is a broken symbolic link  or  find  is
              unable  to  examine the file to which the link points).  Use of this option implies
              -noleaf.  If you later use the -P option, -noleaf will still be in effect.   If  -L
              is  in  effect  and  find  discovers  a  symbolic link to a subdirectory during its
              search, the subdirectory pointed to by the symbolic link will be searched.

              When the -L option is in effect, the -type predicate will always match against  the
              type of the file that a symbolic link points to rather than the link itself (unless
              the symbolic link is broken).  Using -L causes the -lname  and  -ilname  predicates
              always to return false.


       -H     Do  not  follow symbolic links, except while processing the command line arguments.
              When find examines or prints information about files, the information used shall be
              taken from the properties of the symbolic link itself.   The only exception to this
              behaviour is when a file specified on the command line is a symbolic link, and  the
              link can be resolved.  For that situation, the information used is taken from what‐
              ever the link points to (that is, the link is followed).  The information about the
              link  itself is used as a fallback if the file pointed to by the symbolic link can‐
              not be examined.  If -H is in effect and one of the paths specified on the  command
              line  is  a  symbolic  link  to a directory, the contents of that directory will be
              examined (though of course -maxdepth 0 would prevent this).

       If more than one of -H, -L and -P is specified, each overrides the others;  the  last  one
       appearing on the command line takes effect.  Since it is the default, the -P option should
       be considered to be in effect unless either -H or -L is specified.

       GNU find frequently stats files during the processing of the command line  itself,  before
       any  searching  has  begun.   These options also affect how those arguments are processed.
       Specifically, there are a number of tests that compare files listed on  the  command  line
       against a file we are currently considering.  In each case, the file specified on the com‐
       mand line will have been examined and some of its properties will have been saved.  If the
       named  file  is  in fact a symbolic link, and the -P option is in effect (or if neither -H
       nor -L were specified), the information used for the comparison will  be  taken  from  the
       properties  of  the symbolic link.  Otherwise, it will be taken from the properties of the
       file the link points to.  If find cannot follow the  link  (for  example  because  it  has
       insufficient  privileges  or  the link points to a nonexistent file) the properties of the
       link itself will be used.

       When the -H or -L options are in effect, any symbolic links  listed  as  the  argument  of
       -newer  will  be  dereferenced, and the timestamp will be taken from the file to which the
       symbolic link points.  The same consideration applies to -newerXY, -anewer and -cnewer.

       The -follow option has a similar effect to -L, though it takes effect at the  point  where
       it  appears (that is, if -L is not used but -follow is, any symbolic links appearing after
       -follow on the command line will be dereferenced, and those before it will not).


       -D debugoptions
              Print diagnostic information; this can be helpful to  diagnose  problems  with  why
              find  is  not doing what you want.  The list of debug options should be comma sepa‐
              rated.  Compatibility of the debug options is not guaranteed  between  releases  of
              findutils.   For  a complete list of valid debug options, see the output of find -D
              help.  Valid debug options include

              help   Explain the debugging options

              tree   Show the expression tree in its original and optimised form.

              stat   Print messages as files are examined with the stat and lstat  system  calls.
                     The find program tries to minimise such calls.

              opt    Prints diagnostic information relating to the optimisation of the expression
                     tree; see the -O option.

              rates  Prints a summary indicating how often each predicate succeeded or failed.

       -Olevel
              Enables query optimisation.   The find program reorders tests to speed up execution
              while  preserving the overall effect; that is, predicates with side effects are not
              reordered relative to each other.  The optimisations performed at each optimisation
              level are as follows.

              0      Equivalent to optimisation level 1.

              1      This  is  the  default optimisation level and corresponds to the traditional
                     behaviour.  Expressions are reordered so that tests based only on the  names
                     of files (for example -name and -regex) are performed first.

              2      Any  -type  or  -xtype tests are performed after any tests based only on the
                     names of files, but before any  tests  that  require  information  from  the
                     inode.   On  many  modern versions of Unix, file types are returned by read‐
                     dir() and so these predicates are faster to evaluate than  predicates  which
                     need to stat the file first.  If you use the -fstype FOO predicate and spec‐
                     ify  a  filsystem  type  FOO  which  is  not  known  (that  is,  present  in
                     `/etc/mtab')  at  the  time  find  starts,  that  predicate is equivalent to
                     -false.

              3      At this optimisation level, the full cost-based query optimiser is  enabled.
                     The order of tests is modified so that cheap (i.e. fast) tests are performed
                     first and more expensive ones are performed  later,  if  necessary.   Within
                     each  cost  band,  predicates  are  evaluated  earlier or later according to
                     whether they are likely to succeed or not.  For  -o,  predicates  which  are
                     likely  to  succeed  are evaluated earlier, and for -a, predicates which are
                     likely to fail are evaluated earlier.

              The cost-based optimiser has a fixed idea of how likely any given test is  to  suc‐
              ceed.   In  some  cases the probability takes account of the specific nature of the
              test (for example, -type f is assumed to be more likely to succeed than  -type  c).
              The  cost-based  optimiser  is currently being evaluated.   If it does not actually
              improve the performance of find, it will be removed again.   Conversely,  optimisa‐
              tions that prove to be reliable, robust and effective may be enabled at lower opti‐
              misation levels over time.  However, the default behaviour (i.e. optimisation level
              1)  will not be changed in the 4.3.x release series.  The findutils test suite runs
              all the tests on find at each optimisation level and ensures that the result is the
              same.

EXPRESSIONS
       The  expression is made up of options (which affect overall operation rather than the pro‐
       cessing of a specific file, and always return true), tests (which return a true  or  false
       value),  and actions (which have side effects and return a true or false value), all sepa‐
       rated by operators.  -and is assumed where the operator is omitted.

       If the expression contains no actions other than -prune, -print is performed on all  files
       for which the expression is true.


   OPTIONS
       All options always return true.  Except for -daystart, -follow and -regextype, the options
       affect all tests, including tests specified  before  the  option.   This  is  because  the
       options  are  processed when the command line is parsed, while the tests don't do anything
       until files are examined.  The -daystart, -follow and -regextype options are different  in
       this  respect,  and  have  an effect only on tests which appear later in the command line.
       Therefore, for clarity, it is best to place them at the beginning of  the  expression.   A
       warning is issued if you don't do this.


       -d     A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.


       -daystart
              Measure times (for -amin, -atime, -cmin, -ctime, -mmin, and -mtime) from the begin‐
              ning of today rather than from 24 hours ago.  This option only affects tests  which
              appear later on the command line.


       -depth Process  each directory's contents before the directory itself.  The -delete action
              also implies -depth.


       -follow
              Deprecated; use the  -L  option  instead.   Dereference  symbolic  links.   Implies
              -noleaf.   The -follow option affects only those tests which appear after it on the
              command line.  Unless the -H or -L option has been specified, the position  of  the
              -follow  option  changes the behaviour of the -newer predicate; any files listed as
              the argument of -newer will be dereferenced if they are symbolic links.   The  same
              consideration applies to -newerXY, -anewer and -cnewer.  Similarly, the -type pred‐
              icate will always match against the type of the file that a symbolic link points to
              rather  than  the  link itself.  Using -follow causes the -lname and -ilname predi‐
              cates always to return false.


       -help, --help
              Print a summary of the command-line usage of find and exit.


       -ignore_readdir_race
              Normally, find will emit an error message when it fails to stat  a  file.   If  you
              give  this option and a file is deleted between the time find reads the name of the
              file from the directory and the time it tries to stat the file,  no  error  message
              will  be issued.    This also applies to files or directories whose names are given
              on the command line.  This option takes effect at the  time  the  command  line  is
              read,  which  means  that  you  cannot  search one part of the filesystem with this
              option on and part of it with this option off (if you need to  do  that,  you  will
              need to issue two find commands instead, one with the option and one without it).


       -maxdepth levels
              Descend  at  most  levels  (a non-negative integer) levels of directories below the
              command line arguments.  -maxdepth 0
               means only apply the tests and actions to the command line arguments.


       -mindepth levels
              Do not apply any tests or actions at levels less than levels (a non-negative  inte‐
              ger).  -mindepth 1 means process all files except the command line arguments.


       -mount Don't  descend  directories on other filesystems.  An alternate name for -xdev, for
              compatibility with some other versions of find.


       -noignore_readdir_race
              Turns off the effect of -ignore_readdir_race.


       -noleaf
              Do not optimize by assuming that directories contain 2  fewer  subdirectories  than
              their  hard  link  count.  This option is needed when searching filesystems that do
              not follow the Unix directory-link convention, such as CD-ROM or MS-DOS filesystems
              or  AFS  volume  mount  points.   Each directory on a normal Unix filesystem has at
              least 2 hard links: its name and its `.'  entry.  Additionally, its  subdirectories
              (if  any) each have a `..'  entry linked to that directory.  When find is examining
              a directory, after it has statted 2 fewer subdirectories than the directory's  link
              count,  it  knows that the rest of the entries in the directory are non-directories
              (`leaf' files in the directory tree).  If only the files' names need  to  be  exam‐
              ined,  there  is  no need to stat them; this gives a significant increase in search
              speed.


       -regextype type
              Changes the regular expression syntax understood by -regex and -iregex tests  which
              occur  later  on  the command line.  Currently-implemented types are emacs (this is
              the default), posix-awk, posix-basic, posix-egrep and posix-extended.


       -version, --version
              Print the find version number and exit.


       -warn, -nowarn
              Turn warning messages on or off.  These warnings apply only  to  the  command  line
              usage,  not  to  any conditions that find might encounter when it searches directo‐
              ries.  The default behaviour corresponds to -warn if standard input is a  tty,  and
              to -nowarn otherwise.


       -xautofs
              Don't descend directories on autofs filesystems.


       -xdev  Don't descend directories on other filesystems.


   TESTS
       Some  tests,  for  example  -newerXY and -samefile, allow comparison between the file cur‐
       rently being examined and some reference file specified on the command line.   When  these
       tests  are used, the interpretation of the reference file is determined by the options -H,
       -L and -P and any previous -follow, but the reference file is only examined once,  at  the
       time  the  command line is parsed.  If the reference file cannot be examined (for example,
       the stat(2) system call fails for it), an error message is issued, and find exits  with  a
       nonzero status.

       Numeric arguments can be specified as

       +n     for greater than n,

       -n     for less than n,

       n      for exactly n.

       -amin n
              File was last accessed n minutes ago.


       -anewer file
              File was last accessed more recently than file was modified.  If file is a symbolic
              link and the -H option or the -L option is in effect, the access time of  the  file
              it points to is always used.


       -atime n
              File  was  last  accessed  n*24  hours ago.  When find figures out how many 24-hour
              periods ago the file was last accessed, any fractional part is ignored, so to match
              -atime +1, a file has to have been accessed at least two days ago.


       -cmin n
              File's status was last changed n minutes ago.


       -cnewer file
              File's  status was last changed more recently than file was modified.  If file is a
              symbolic link and the -H option or the -L option is in  effect,  the  status-change
              time of the file it points to is always used.


       -ctime n
              File's  status  was  last  changed  n*24 hours ago.  See the comments for -atime to
              understand how rounding affects the interpretation of file status change times.


       -empty File is empty and is either a regular file or a directory.


       -executable
              Matches files which are executable and directories which are searchable (in a  file
              name  resolution  sense).   This  takes into account access control lists and other
              permissions artefacts which the -perm test ignores.  This test  makes  use  of  the
              access(2) system call, and so can be fooled by NFS servers which do UID mapping (or
              root-squashing), since many systems implement access(2) in the client's kernel  and
              so cannot make use of the UID mapping information held on the server.  Because this
              test is based only on the result of the access(2) system call, there is no  guaran‐
              tee that a file for which this test succeeds can actually be executed.


       -false Always false.


       -fstype type
              File  is  on a filesystem of type type.  The valid filesystem types vary among dif‐
              ferent versions of Unix; an incomplete list of filesystem types that  are  accepted
              on  some  version  of Unix or another is: ufs, 4.2, 4.3, nfs, tmp, mfs, S51K, S52K.
              You can use -printf with the %F directive to see the types of your filesystems.


       -gid n File's numeric group ID is n.


       -group gname
              File belongs to group gname (numeric group ID allowed).


       -ilname pattern
              Like -lname, but the match is case insensitive.  If the -L option  or  the  -follow
              option is in effect, this test returns false unless the symbolic link is broken.



       -iname pattern
              Like -name, but the match is case insensitive.  For example, the patterns `fo*' and
              `F??' match the file names `Foo', `FOO', `foo', `fOo', etc.   The  pattern  `*foo*`
              will also match a file called '.foobar'.


       -inum n
              File has inode number n.  It is normally easier to use the -samefile test instead.


       -ipath pattern
              Like -path.  but the match is case insensitive.


       -iregex pattern
              Like -regex, but the match is case insensitive.


       -iwholename pattern
              See -ipath.    This alternative is less portable than -ipath.


       -links n
              File has n links.


       -lname pattern
              File  is a symbolic link whose contents match shell pattern pattern.  The metachar‐
              acters do not treat `/' or `.' specially.  If the -L option or the  -follow  option
              is in effect, this test returns false unless the symbolic link is broken.


       -mmin n
              File's data was last modified n minutes ago.


       -mtime n
              File's  data  was  last  modified  n*24  hours ago.  See the comments for -atime to
              understand how rounding affects the interpretation of file modification times.


       -name pattern
              Base of file name (the path with the leading  directories  removed)  matches  shell
              pattern  pattern.  Because the leading directories are removed, the file names con‐
              sidered for a match with -name will never include a  slash,  so  `-name  a/b'  will
              never  match anything (you probably need to use -path instead).  The metacharacters
              (`*', `?', and `[]') match a `.' at the start of the base name (this is a change in
              findutils-4.2.2;  see  section STANDARDS CONFORMANCE below).  To ignore a directory
              and the files under it, use -prune; see an example in  the  description  of  -path.
              Braces  are  not  recognised  as  being  special, despite the fact that some shells
              including Bash imbue braces with a special meaning in shell patterns.  The filename
              matching is performed with the use of the fnmatch(3) library function.   Don't for‐
              get to enclose the pattern in quotes in order to protect it from expansion  by  the
              shell.


       -newer file
              File  was  modified more recently than file.  If file is a symbolic link and the -H
              option or the -L option is in effect, the modification time of the file  it  points
              to is always used.


       -newerXY reference
              Compares  the timestamp of the current file with reference.  The reference argument
              is normally the name of a file (and one of its timestamps is used for the  compari‐
              son)  but  it may also be a string describing an absolute time.  X and Y are place‐
              holders for other letters, and these letters select which  time  belonging  to  how
              reference is used for the comparison.

              a   The access time of the file reference
              B   The birth time of the file reference
              c   The inode status change time of reference
              m   The modification time of the file reference
              t   reference is interpreted directly as a time

              Some combinations are invalid; for example, it is invalid for X to be t.  Some com‐
              binations are not implemented on all systems; for example B is not supported on all
              systems.   If  an  invalid  or  unsupported combination of XY is specified, a fatal
              error results.  Time specifications are interpreted as for the argument to  the  -d
              option  of GNU date.  If you try to use the birth time of a reference file, and the
              birth time cannot be determined, a fatal error message results.  If you  specify  a
              test  which  refers  to the birth time of files being examined, this test will fail
              for any files where the birth time is unknown.


       -nogroup
              No group corresponds to file's numeric group ID.


       -nouser
              No user corresponds to file's numeric user ID.


       -path pattern
              File name matches shell pattern pattern.  The metacharacters do not  treat  `/'  or
              `.' specially; so, for example,
                        find . -path "./sr*sc"
              will print an entry for a directory called `./src/misc' (if one exists).  To ignore
              a whole directory tree, use -prune rather than checking every  file  in  the  tree.
              For  example, to skip the directory `src/emacs' and all files and directories under
              it, and print the names of the other files found, do something like this:
                        find . -path ./src/emacs -prune -o -print
              Note that the pattern match test applies to the whole file name, starting from  one
              of  the start points named on the command line.  It would only make sense to use an
              absolute path name here if the relevant start point is also an absolute path.  This
              means that this command will never match anything:
                        find bar -path /foo/bar/myfile -print
              Find compares the -path argument with the concatenation of a directory name and the
              base name of the file it's examining.  Since the concatenation will never end  with
              a  slash,  -path  arguments  ending in a slash will match nothing (except perhaps a
              start point specified on the command line).  The predicate -path is also  supported
              by HP-UX find and will be in a forthcoming version of the POSIX standard.


       -perm mode
              File's  permission bits are exactly mode (octal or symbolic).  Since an exact match
              is required, if you want to use this form for symbolic modes, you may have to spec‐
              ify  a  rather  complex mode string.  For example `-perm g=w' will only match files
              which have mode 0020 (that is, ones for which group write permission  is  the  only
              permission set).  It is more likely that you will want to use the `/' or `-' forms,
              for example `-perm -g=w', which matches any file with group write permission.   See
              the EXAMPLES section for some illustrative examples.


       -perm -mode
              All  of the permission bits mode are set for the file.  Symbolic modes are accepted
              in this form, and this is usually the way in which would want  to  use  them.   You
              must specify `u', `g' or `o' if you use a symbolic mode.   See the EXAMPLES section
              for some illustrative examples.


       -perm /mode
              Any of the permission bits mode are set for the file.  Symbolic modes are  accepted
              in  this  form.   You must specify `u', `g' or `o' if you use a symbolic mode.  See
              the EXAMPLES section for some illustrative examples.  If no permission bits in mode
              are set, this test matches any file (the idea here is to be consistent with the be‐
              haviour of -perm -000).


       -perm +mode
              Deprecated, old way of searching for files with any of the permission bits in  mode
              set.   You  should  use -perm /mode instead. Trying to use the `+' syntax with sym‐
              bolic modes will yield surprising results.  For example, `+u+x' is a valid symbolic
              mode  (equivalent to +u,+x, i.e. 0111) and will therefore not be evaluated as -perm
              +mode but instead as the exact mode specifier -perm mode and so  it  matches  files
              with  exact  permissions  0111  instead  of files with any execute bit set.  If you
              found this paragraph confusing, you're not alone - just use -perm /mode.  This form
              of the -perm test is deprecated because the POSIX specification requires the inter‐
              pretation of a leading `+' as being part of a symbolic mode, and so we switched  to
              using `/' instead.


       -readable
              Matches files which are readable.  This takes into account access control lists and
              other permissions artefacts which the -perm test ignores.  This test makes  use  of
              the access(2) system call, and so can be fooled by NFS servers which do UID mapping
              (or root-squashing), since many systems implement access(2) in the client's  kernel
              and so cannot make use of the UID mapping information held on the server.


       -regex pattern
              File  name  matches regular expression pattern.  This is a match on the whole path,
              not a search.  For example, to match a file named `./fubar3', you can use the regu‐
              lar  expression  `.*bar.'  or  `.*b.*3',  but not `f.*r3'.  The regular expressions
              understood by find are by default  Emacs  Regular  Expressions,  but  this  can  be
              changed with the -regextype option.


       -samefile name
              File  refers  to  the  same inode as name.   When -L is in effect, this can include
              symbolic links.


       -size n[cwbkMG]
              File uses n units of space.  The following suffixes can be used:

              `b'    for 512-byte blocks (this is the default if no suffix is used)

              `c'    for bytes

              `w'    for two-byte words

              `k'    for Kilobytes (units of 1024 bytes)

              `M'    for Megabytes (units of 1048576 bytes)

              `G'    for Gigabytes (units of 1073741824 bytes)

              The size does not count indirect blocks, but it does count blocks in  sparse  files
              that are not actually allocated.  Bear in mind that the `%k' and `%b' format speci‐
              fiers of -printf handle sparse files differently.  The `b'  suffix  always  denotes
              512-byte blocks and never 1 Kilobyte blocks, which is different to the behaviour of
              -ls.


       -true  Always true.


       -type c
              File is of type c:

              b      block (buffered) special

              c      character (unbuffered) special

              d      directory

              p      named pipe (FIFO)

              f      regular file

              l      symbolic link; this is never true if the -L option or the -follow option  is
                     in  effect,  unless  the symbolic link is broken.  If you want to search for
                     symbolic links when -L is in effect, use -xtype.

              s      socket

              D      door (Solaris)

       -uid n File's numeric user ID is n.


       -used n
              File was last accessed n days after its status was last changed.


       -user uname
              File is owned by user uname (numeric user ID allowed).


       -wholename pattern
              See -path.    This alternative is less portable than -path.


       -writable
              Matches files which are writable.  This takes into account access control lists and
              other  permissions  artefacts which the -perm test ignores.  This test makes use of
              the access(2) system call, and so can be fooled by NFS servers which do UID mapping
              (or  root-squashing), since many systems implement access(2) in the client's kernel
              and so cannot make use of the UID mapping information held on the server.


       -xtype c
              The same as -type unless the file is a symbolic link.  For symbolic links:  if  the
              -H  or  -P option was specified, true if the file is a link to a file of type c; if
              the -L option has been given, true if c is  `l'.   In  other  words,  for  symbolic
              links, -xtype checks the type of the file that -type does not check.

       -context pattern
              (SELinux only) Security context of the file matches glob pattern.


   ACTIONS
       -delete
              Delete  files;  true if removal succeeded.  If the removal failed, an error message
              is issued.  If -delete fails, find's exit status will be nonzero (when  it  eventu‐
              ally exits).  Use of -delete automatically turns on the `-depth' option.

              Warnings: Don't forget that the find command line is evaluated as an expression, so
              putting -delete first will make find try to delete everything  below  the  starting
              points  you  specified.   When testing a find command line that you later intend to
              use with -delete, you should explicitly specify -depth in order to avoid later sur‐
              prises.  Because -delete implies -depth, you cannot usefully use -prune and -delete
              together.


       -exec command ;
              Execute command; true if 0 status is returned.  All following arguments to find are
              taken to be arguments to the command until an argument consisting of `;' is encoun‐
              tered.  The string `{}' is replaced by the current file name being processed every‐
              where  it occurs in the arguments to the command, not just in arguments where it is
              alone, as in some versions of find.  Both of these constructions might need  to  be
              escaped  (with  a  `\') or quoted to protect them from expansion by the shell.  See
              the EXAMPLES section for examples of the use of the -exec  option.   The  specified
              command is run once for each matched file.  The command is executed in the starting
              directory.   There are unavoidable security problems surrounding use of  the  -exec
              action; you should use the -execdir option instead.


       -exec command {} +
              This  variant of the -exec action runs the specified command on the selected files,
              but the command line is built by appending each selected file name at the end;  the
              total  number  of  invocations  of the command will be much less than the number of
              matched files.  The command line is built in much the same way  that  xargs  builds
              its  command  lines.  Only one instance of `{}' is allowed within the command.  The
              command is executed in the starting directory.


       -execdir command ;

       -execdir command {} +
              Like -exec, but the specified command is run from the subdirectory  containing  the
              matched  file, which is not normally the directory in which you started find.  This
              a much more secure method for invoking commands, as it avoids race conditions  dur‐
              ing  resolution  of  the paths to the matched files.  As with the -exec action, the
              `+' form of -execdir will build a command line to process  more  than  one  matched
              file,  but  any  given invocation of command will only list files that exist in the
              same subdirectory.  If you use this option, you must ensure that your  $PATH  envi‐
              ronment  variable  does  not reference `.'; otherwise, an attacker can run any com‐
              mands they like by leaving an appropriately-named file in a directory in which  you
              will  run -execdir.  The same applies to having entries in $PATH which are empty or
              which are not absolute directory names.


       -fls file
              True; like -ls but write to file like -fprint.  The output file is always  created,
              even  if  the  predicate  is  never matched.  See the UNUSUAL FILENAMES section for
              information about how unusual characters in filenames are handled.


       -fprint file
              True; print the full file name into file file.  If file does not exist when find is
              run,  it  is created; if it does exist, it is truncated.  The file names `/dev/std‐
              out' and `/dev/stderr' are handled specially; they refer to the standard output and
              standard  error  output,  respectively.  The output file is always created, even if
              the predicate is never matched.  See the UNUSUAL FILENAMES section for  information
              about how unusual characters in filenames are handled.


       -fprint0 file
              True;  like -print0 but write to file like -fprint.  The output file is always cre‐
              ated, even if the predicate is never matched.  See the  UNUSUAL  FILENAMES  section
              for information about how unusual characters in filenames are handled.


       -fprintf file format
              True;  like -printf but write to file like -fprint.  The output file is always cre‐
              ated, even if the predicate is never matched.  See the  UNUSUAL  FILENAMES  section
              for information about how unusual characters in filenames are handled.


       -ls    True;  list  current  file in ls -dils format on standard output.  The block counts
              are of 1K blocks, unless the environment variable POSIXLY_CORRECT is set, in  which
              case  512-byte  blocks are used.  See the UNUSUAL FILENAMES section for information
              about how unusual characters in filenames are handled.


       -ok command ;
              Like -exec but ask the user first.  If the user agrees, run the command.  Otherwise
              just  return  false.   If the command is run, its standard input is redirected from
              /dev/null.


              The response to the prompt is matched against a  pair  of  regular  expressions  to
              determine if it is an affirmative or negative response.  This regular expression is
              obtained from the system if the `POSIXLY_CORRECT' environment variable is  set,  or
              otherwise  from find's message translations.  If the system has no suitable defini‐
              tion, find's own definition will be used.   In either case, the  interpretation  of
              the  regular  expression  itself  will  be  affected  by  the environment variables
              'LC_CTYPE' (character classes) and 'LC_COLLATE' (character ranges  and  equivalence
              classes).




       -okdir command ;
              Like  -execdir but ask the user first in the same way as for -ok.  If the user does
              not agree, just return false.  If the command is run, its standard input  is  redi‐
              rected from /dev/null.


       -print True;  print the full file name on the standard output, followed by a newline.   If
              you are piping the output of find into another program and there  is  the  faintest
              possibility  that  the  files  which you are searching for might contain a newline,
              then you should seriously consider using the -print0 option instead of -print.  See
              the UNUSUAL FILENAMES section for information about how unusual characters in file‐
              names are handled.


       -print0
              True; print the full file name on the standard output, followed by a null character
              (instead  of  the newline character that -print uses).  This allows file names that
              contain newlines or other types of white space to be correctly interpreted by  pro‐
              grams  that  process  the find output.  This option corresponds to the -0 option of
              xargs.


       -printf format
              True; print format on the standard output, interpreting `\' escapes and `%'  direc‐
              tives.   Field  widths and precisions can be specified as with the `printf' C func‐
              tion.  Please note that many of the fields are printed as %s rather  than  %d,  and
              this  may mean that flags don't work as you might expect.  This also means that the
              `-' flag does work (it forces fields to be left-aligned).  Unlike  -print,  -printf
              does not add a newline at the end of the string.  The escapes and directives are:

              \a     Alarm bell.

              \b     Backspace.

              \c     Stop printing from this format immediately and flush the output.

              \f     Form feed.

              \n     Newline.

              \r     Carriage return.

              \t     Horizontal tab.

              \v     Vertical tab.

              \0     ASCII NUL.

              \\     A literal backslash (`\').

              \NNN   The character whose ASCII code is NNN (octal).

              A  `\'  character followed by any other character is treated as an ordinary charac‐
              ter, so they both are printed.

              %%     A literal percent sign.

              %a     File's last access time in the format returned by the C `ctime' function.

              %Ak    File's last access time in the format specified by k, which is either `@' or
                     a  directive  for  the C `strftime' function.  The possible values for k are
                     listed below; some of them might not be available on  all  systems,  due  to
                     differences in `strftime' between systems.

                     @      seconds since Jan. 1, 1970, 00:00 GMT, with fractional part.

                     Time fields:

                     H      hour (00..23)

                     I      hour (01..12)

                     k      hour ( 0..23)

                     l      hour ( 1..12)

                     M      minute (00..59)

                     p      locale's AM or PM

                     r      time, 12-hour (hh:mm:ss [AP]M)

                     S      Second (00.00 .. 61.00).  There is a fractional part.

                     T      time, 24-hour (hh:mm:ss)

                     +      Date and time, separated by `+', for example `2004-04-28+22:22:05.0'.
                            This is a GNU extension.  The time is given in the  current  timezone
                            (which  may be affected by setting the TZ environment variable).  The
                            seconds field includes a fractional part.

                     X      locale's time representation (H:M:S)

                     Z      time zone (e.g., EDT), or nothing if no time zone is determinable

                     Date fields:

                     a      locale's abbreviated weekday name (Sun..Sat)

                     A      locale's full weekday name, variable length (Sunday..Saturday)

                     b      locale's abbreviated month name (Jan..Dec)

                     B      locale's full month name, variable length (January..December)

                     c      locale's date and time (Sat Nov 04 12:02:33 EST 1989).  The format is
                            the  same  as for ctime(3) and so to preserve compatibility with that
                            format, there is no fractional part in the seconds field.

                     d      day of month (01..31)

                     D      date (mm/dd/yy)

                     h      same as b

                     j      day of year (001..366)

                     m      month (01..12)

                     U      week number of year with Sunday as first day of week (00..53)

                     w      day of week (0..6)

                     W      week number of year with Monday as first day of week (00..53)

                     x      locale's date representation (mm/dd/yy)

                     y      last two digits of year (00..99)

                     Y      year (1970...)

              %b     The amount of disk space used for this file in 512-byte blocks.  Since  disk
                     space is allocated in multiples of the filesystem block size this is usually
                     greater than %s/512, but it can also be smaller if  the  file  is  a  sparse
                     file.

              %c     File's last status change time in the format returned by the C `ctime' func‐
                     tion.

              %Ck    File's last status change time in the format specified by k,  which  is  the
                     same as for %A.

              %d     File's depth in the directory tree; 0 means the file is a command line argu‐
                     ment.

              %D     The device number on which the file  exists  (the  st_dev  field  of  struct
                     stat), in decimal.

              %f     File's name with any leading directories removed (only the last element).

              %F     Type of the filesystem the file is on; this value can be used for -fstype.

              %g     File's group name, or numeric group ID if the group has no name.

              %G     File's numeric group ID.

              %h     Leading  directories of file's name (all but the last element).  If the file
                     name contains no slashes (since it is in the current directory) the %h spec‐
                     ifier expands to ".".

              %H     Command line argument under which file was found.

              %i     File's inode number (in decimal).

              %k     The  amount  of disk space used for this file in 1K blocks. Since disk space
                     is allocated in multiples of the  filesystem  block  size  this  is  usually
                     greater  than  %s/1024,  but  it can also be smaller if the file is a sparse
                     file.

              %l     Object of symbolic link (empty string if file is not a symbolic link).

              %m     File's permission bits (in octal).  This option uses the `traditional'  num‐
                     bers which most Unix implementations use, but if your particular implementa‐
                     tion uses an unusual ordering of octal permissions bits, you will see a dif‐
                     ference  between  the  actual value of the file's mode and the output of %m.
                     Normally you will want to have a leading zero on  this  number,  and  to  do
                     this, you should use the # flag (as in, for example, `%#m').

              %M     File's  permissions  (in  symbolic form, as for ls).  This directive is sup‐
                     ported in findutils 4.2.5 and later.

              %n     Number of hard links to file.

              %p     File's name.

              %P     File's name with the name of the command line argument under  which  it  was
                     found removed.

              %s     File's size in bytes.

              %S     File's  sparseness.   This is calculated as (BLOCKSIZE*st_blocks / st_size).
                     The exact value you will get for an ordinary file of  a  certain  length  is
                     system-dependent.  However, normally sparse files will have values less than
                     1.0, and files which use indirect blocks may have a value which  is  greater
                     than 1.0.   The value used for BLOCKSIZE is system-dependent, but is usually
                     512 bytes.   If the file size is zero, the value printed is  undefined.   On
                     systems  which lack support for st_blocks, a file's sparseness is assumed to
                     be 1.0.

              %t     File's last modification time in the format returned by the C `ctime'  func‐
                     tion.

              %Tk    File's  last  modification  time  in the format specified by k, which is the
                     same as for %A.

              %u     File's user name, or numeric user ID if the user has no name.

              %U     File's numeric user ID.

              %y     File's type (like in ls -l), U=unknown type (shouldn't happen)

              %Y     File's type (like %y), plus follow symlinks: L=loop, N=nonexistent

              %Z     (SELinux only) file's security context.

              %{ %[ %(
                     Reserved for future use.

              A `%' character followed by any other character is discarded, but the other charac‐
              ter  is  printed  (don't  rely  on this, as further format characters may be intro‐
              duced).  A `%' at the end of the format argument causes undefined  behaviour  since
              there  is  no  following  character.   In some locales, it may hide your door keys,
              while in others it may remove the final page from the novel you are reading.

              The %m and %d directives support the # , 0 and + flags, but the other directives do
              not,  even  if  they  print  numbers.  Numeric directives that do not support these
              flags include G, U, b, D, k and n.  The `-' format flag is  supported  and  changes
              the alignment of a field from right-justified (which is the default) to left-justi‐
              fied.

              See the UNUSUAL FILENAMES section for information about how unusual  characters  in
              filenames are handled.



       -prune True;  if  the  file  is  a  directory, do not descend into it. If -depth is given,
              false; no effect.  Because -delete implies -depth, you cannot usefully  use  -prune
              and -delete together.


       -quit  Exit immediately.  No child processes will be left running, but no more paths spec‐
              ified on the command line will be processed.  For example, find  /tmp/foo  /tmp/bar
              -print  -quit will print only /tmp/foo.  Any command lines which have been built up
              with -execdir ... {} + will be invoked before find exits.   The exit status may  or
              may not be zero, depending on whether an error has already occurred.


   UNUSUAL FILENAMES
       Many  of  the actions of find result in the printing of data which is under the control of
       other users.  This includes file names, sizes, modification  times  and  so  forth.   File
       names  are  a  potential problem since they can contain any character except `\0' and `/'.
       Unusual characters in file names can do unexpected and often undesirable  things  to  your
       terminal  (for  example,  changing  the settings of your function keys on some terminals).
       Unusual characters are handled differently by various actions, as described below.


       -print0, -fprint0
              Always print the exact filename, unchanged, even if the output is going to a termi‐
              nal.


       -ls, -fls
              Unusual  characters  are  always escaped.  White space, backslash, and double quote
              characters are printed using C-style escaping  (for  example  `\f',  `\"').   Other
              unusual  characters  are printed using an octal escape.  Other printable characters
              (for -ls and -fls these are the characters between octal 041 and 0176) are  printed
              as-is.


       -printf, -fprintf
              If  the  output  is  not  going to a terminal, it is printed as-is.  Otherwise, the
              result depends on which directive is in use.  The directives %D, %F,  %g,  %G,  %H,
              %Y,  and  %y  expand to values which are not under control of files' owners, and so
              are printed as-is.  The directives %a, %b, %c, %d, %i, %k, %m, %M, %n, %s,  %t,  %u
              and %U have values which are under the control of files' owners but which cannot be
              used to send arbitrary data to the terminal, and so these are printed  as-is.   The
              directives %f, %h, %l, %p and %P are quoted.  This quoting is performed in the same
              way as for GNU ls.  This is not the same quoting mechanism as the one used for  -ls
              and -fls.  If you are able to decide what format to use for the output of find then
              it is normally better to use `\0' as a terminator than  to  use  newline,  as  file
              names  can  contain  white  space  and  newline  characters.   The  setting  of the
              `LC_CTYPE' environment variable is used to determine which characters  need  to  be
              quoted.


       -print, -fprint
              Quoting  is  handled in the same way as for -printf and -fprintf.  If you are using
              find in a script or in a situation where the matched  files  might  have  arbitrary
              names, you should consider using -print0 instead of -print.

       The  -ok and -okdir actions print the current filename as-is.  This may change in a future
       release.


   OPERATORS
       Listed in order of decreasing precedence:


       ( expr )
              Force precedence.  Since parentheses are special to the shell,  you  will  normally
              need  to  quote them.  Many of the examples in this manual page use backslashes for
              this purpose: `\(...\)' instead of `(...)'.


       ! expr True if expr is false.  This character  will  also  usually  need  protection  from
              interpretation by the shell.


       -not expr
              Same as ! expr, but not POSIX compliant.


       expr1 expr2
              Two expressions in a row are taken to be joined with an implied "and"; expr2 is not
              evaluated if expr1 is false.


       expr1 -a expr2
              Same as expr1 expr2.


       expr1 -and expr2
              Same as expr1 expr2, but not POSIX compliant.


       expr1 -o expr2
              Or; expr2 is not evaluated if expr1 is true.


       expr1 -or expr2
              Same as expr1 -o expr2, but not POSIX compliant.


       expr1 , expr2
              List; both expr1 and expr2 are always evaluated.  The value of expr1 is  discarded;
              the  value  of the list is the value of expr2. The comma operator can be useful for
              searching for several different types of thing, but traversing the filesystem hier‐
              archy only once.  The -fprintf action can be used to list the various matched items
              into several different output files.



STANDARDS CONFORMANCE
       For closest compliance to the POSIX standard, you should set the POSIXLY_CORRECT  environ‐
       ment  variable.   The  following  options  are  specified  in the POSIX standard (IEEE Std
       1003.1, 2003 Edition):


       -H     This option is supported.


       -L     This option is supported.


       -name  This option is supported, but POSIX conformance depends on the POSIX conformance of
              the system's fnmatch(3) library function.  As of findutils-4.2.2, shell metacharac‐
              ters (`*', `?' or `[]' for example) will match a leading  `.',  because  IEEE  PASC
              interpretation  126  requires  this.    This  is a change from previous versions of
              findutils.


       -type  Supported.   POSIX specifies `b', `c', `d', `l', `p', `f' and `s'.  GNU  find  also
              supports `D', representing a Door, where the OS provides these.


       -ok    Supported.   Interpretation of the response is according to the "yes" and "no" pat‐
              terns selected  by  setting  the  `LC_MESSAGES'  environment  variable.   When  the
              `POSIXLY_CORRECT'  environment  variable  is set, these patterns are taken system's
              definition of a positive (yes) or negative (no) response. See the system's documen‐
              tation  for nl_langinfo(3), in particular YESEXPR and NOEXPR.    When `POSIXLY_COR‐
              RECT' is not set, the patterns are instead taken from find's own message catalogue.


       -newer Supported.  If the file specified is a symbolic link, it  is  always  dereferenced.
              This is a change from previous behaviour, which used to take the relevant time from
              the symbolic link; see the HISTORY section below.


       -perm  Supported.  If the POSIXLY_CORRECT environment variable is not set, some mode argu‐
              ments  (for  example +a+x) which are not valid in POSIX are supported for backward-
              compatibility.


       Other predicates
              The predicates -atime, -ctime, -depth, -group, -links, -mtime,  -nogroup,  -nouser,
              -print,  -prune,  -size,  -user  and  -xdev `-atime', `-ctime', `-depth', `-group',
              `-links', `-mtime', `-nogroup', `-nouser', `-perm',  `-print',  `-prune',  `-size',
              `-user' and `-xdev', are all supported.


       The  POSIX  standard  specifies  parentheses `(', `)', negation `!' and the `and' and `or'
       operators ( -a, -o).

       All other options, predicates, expressions and so forth are extensions  beyond  the  POSIX
       standard.  Many of these extensions are not unique to GNU find, however.

       The POSIX standard requires that find detects loops:

              The  find  utility shall detect infinite loops; that is, entering a previously vis‐
              ited directory that is an ancestor of the last file encountered. When it detects an
              infinite  loop,  find  shall write a diagnostic message to standard error and shall
              either recover its position in the hierarchy or terminate.

       GNU find complies with these requirements.  The link count of  directories  which  contain
       entries which are hard links to an ancestor will often be lower than they otherwise should
       be.  This can mean that GNU find will sometimes optimise away the visiting of a  subdirec‐
       tory  which  is actually a link to an ancestor.  Since find does not actually enter such a
       subdirectory, it is allowed to avoid emitting a diagnostic message.  Although this  behav‐
       iour  may  be somewhat confusing, it is unlikely that anybody actually depends on this be‐
       haviour.  If the leaf optimisation has been turned off with -noleaf, the  directory  entry
       will always be examined and the diagnostic message will be issued where it is appropriate.
       Symbolic links cannot be used to create filesystem cycles as such, but if the -L option or
       the  -follow  option is in use, a diagnostic message is issued when find encounters a loop
       of symbolic links.  As with loops containing hard links, the leaf optimisation will  often
       mean  that find knows that it doesn't need to call stat() or chdir() on the symbolic link,
       so this diagnostic is frequently not necessary.

       The -d option is supported for compatibility with various BSD systems, but you should  use
       the POSIX-compliant option -depth instead.

       The  POSIXLY_CORRECT  environment  variable does not affect the behaviour of the -regex or
       -iregex tests because those tests aren't specified in the POSIX standard.

ENVIRONMENT VARIABLES
       LANG   Provides a default value for the internationalization variables that are  unset  or
              null.


       LC_ALL If  set  to a non-empty string value, override the values of all the other interna‐
              tionalization variables.


       LC_COLLATE
              The POSIX standard specifies that this variable affects the pattern matching to  be
              used  for the -name option.   GNU find uses the fnmatch(3) library function, and so
              support for `LC_COLLATE' depends on  the  system  library.     This  variable  also
              affects the interpretation of the response to -ok; while the `LC_MESSAGES' variable
              selects the actual pattern used to interpret the response to -ok,  the  interpreta‐
              tion of any bracket expressions in the pattern will be affected by `LC_COLLATE'.


       LC_CTYPE
              This  variable  affects  the treatment of character classes used in regular expres‐
              sions and also with the -name test, if the  system's  fnmatch(3)  library  function
              supports  this.   This  variable  also  affects the interpretation of any character
              classes in the regular expressions used to interpret the  response  to  the  prompt
              issued  by -ok.  The `LC_CTYPE' environment variable will also affect which charac‐
              ters are considered to be unprintable when filenames are printed; see  the  section
              UNUSUAL FILENAMES.


       LC_MESSAGES
              Determines   the  locale  to  be  used  for  internationalised  messages.   If  the
              `POSIXLY_CORRECT' environment variable is set, this also determines the interpreta‐
              tion of the response to the prompt made by the -ok action.


       NLSPATH
              Determines the location of the internationalisation message catalogues.


       PATH   Affects  the  directories  which  are  searched  to find the executables invoked by
              -exec, -execdir, -ok and -okdir.


       POSIXLY_CORRECT
              Determines the block size used by -ls and -fls.  If POSIXLY_CORRECT is set,  blocks
              are units of 512 bytes.  Otherwise they are units of 1024 bytes.

              Setting this variable also turns off warning messages (that is, implies -nowarn) by
              default, because POSIX requires that apart from the output for  -ok,  all  messages
              printed on stderr are diagnostics and must result in a non-zero exit status.

              When POSIXLY_CORRECT is not set, -perm +zzz is treated just like -perm /zzz if +zzz
              is not a valid symbolic mode.  When POSIXLY_CORRECT is  set,  such  constructs  are
              treated as an error.

              When  POSIXLY_CORRECT  is set, the response to the prompt made by the -ok action is
              interpreted according to the system's message catalogue, as opposed to according to
              find's own message translations.


       TZ     Affects  the  time  zone  used  for  some  of the time-related format directives of
              -printf and -fprintf.

BINARIES
       The findutils source distribution contains two different  implementations  of  find.   The
       older  implementation  descends  the  file  system  recursively,  while the newer one uses
       fts(3).  Both are normally installed.

       If the option --without-fts was passed  to  configure,  the  recursive  implementation  is
       installed  as  find  and the fts-based implementation is installed as ftsfind.  Otherwise,
       the fts-based implementation is installed as find  and  the  recursive  implementation  is
       installed as oldfind.

EXAMPLES
       find /tmp -name core -type f -print | xargs /bin/rm -f

       Find files named core in or below the directory /tmp and delete them.  Note that this will
       work incorrectly if there are any filenames containing newlines, single or double  quotes,
       or spaces.

       find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f

       Find files named core in or below the directory /tmp and delete them, processing filenames
       in such a way that file or directory names containing single or double quotes,  spaces  or
       newlines  are  correctly  handled.  The -name test comes before the -type test in order to
       avoid having to call stat(2) on every file.


       find . -type f -exec file '{}' \;

       Runs `file' on every file in or below the current directory.  Notice that the  braces  are
       enclosed in single quote marks to protect them from interpretation as shell script punctu‐
       ation.  The semicolon is similarly protected by the use  of  a  backslash,  though  single
       quotes could have been used in that case also.


       find / \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \
       \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)

       Traverse   the   filesystem   just   once,  listing  setuid  files  and  directories  into
       /root/suid.txt and large files into /root/big.txt.


       find $HOME -mtime 0

       Search for files in your home directory which have been modified in the  last  twenty-four
       hours.   This command works this way because the time since each file was last modified is
       divided by 24 hours and any remainder is discarded.  That means that to match -mtime 0,  a
       file will have to have a modification in the past which is less than 24 hours ago.


       find /sbin /usr/sbin -executable \! -readable -print

       Search for files which are executable but not readable.


       find . -perm 664

       Search  for  files  which  have  read and write permission for their owner, and group, but
       which other users can read but not write to.  Files which meet  these  criteria  but  have
       other  permissions  bits  set  (for  example  if someone can execute the file) will not be
       matched.


       find . -perm -664

       Search for files which have read and write permission for their owner and group, and which
       other  users  can  read,  without regard to the presence of any extra permission bits (for
       example the executable bit).  This will match a file which has mode 0777, for example.


       find . -perm /222

       Search for files which are writable by somebody (their owner, or their group,  or  anybody
       else).


       find . -perm /220
       find . -perm /u+w,g+w
       find . -perm /u=w,g=w

       All  three of these commands do the same thing, but the first one uses the octal represen‐
       tation of the file mode, and the other two use the  symbolic  form.   These  commands  all
       search for files which are writable by either their owner or their group.  The files don't
       have to be writable by both the owner and group to be matched; either will do.


       find . -perm -220
       find . -perm -g+w,u+w

       Both these commands do the same thing; search for files which are writable by  both  their
       owner and their group.


       find . -perm -444 -perm /222 ! -perm /111
       find . -perm -a+r -perm /a+w ! -perm /a+x

       These  two  commands both search for files that are readable for everybody ( -perm -444 or
       -perm -a+r), have at least one write bit set ( -perm /222 or -perm /a+w) but are not  exe‐
       cutable for anybody ( ! -perm /111 and ! -perm /a+x respectively).


       cd /source-dir
       find . -name .snapshot -prune -o \( \! -name *~ -print0 \)|
       cpio -pmd0 /dest-dir

       This command copies the contents of /source-dir to /dest-dir, but omits files and directo‐
       ries named .snapshot (and anything in them).  It also omits  files  or  directories  whose
       name  ends  in  ~,  but  not their contents.  The construct -prune -o \( ... -print0 \) is
       quite common.  The idea here is that the expression before -prune matches things which are
       to be pruned.  However, the -prune action itself returns true, so the following -o ensures
       that the right hand side is evaluated only for those directories which didn't  get  pruned
       (the contents of the pruned directories are not even visited, so their contents are irrel‐
       evant).  The expression on the right hand side of the -o is in parentheses only for  clar‐
       ity.   It  emphasises that the -print0 action takes place only for things that didn't have
       -prune applied to them.  Because the default `and'  condition  between  tests  binds  more
       tightly  than  -o,  this  is  the default anyway, but the parentheses help to show what is
       going on.


       find repo/ -exec test -d {}/.svn \; -or \
       -exec test -d {}/.git \; -or -exec test -d {}/CVS \; \
       -print -prune

       Given the following directory of projects and their associated SCM administrative directo‐
       ries, perform an efficient search for the projects' roots:

       repo/project1/CVS
       repo/gnu/project2/.svn
       repo/gnu/project3/.svn
       repo/gnu/project3/src/.svn
       repo/project4/.git

       In  this  example,  -prune prevents unnecessary descent into directories that have already
       been discovered (for example we do  not  search  project3/src  because  we  already  found
       project3/.svn), but ensures sibling directories (project2 and project3) are found.


EXIT STATUS
       find exits with status 0 if all files are processed successfully, greater than 0 if errors
       occur.   This is deliberately a very broad description, but if the return  value  is  non-
       zero, you should not rely on the correctness of the results of find.


SEE ALSO
       locate(1),  locatedb(5),  updatedb(1),  xargs(1), chmod(1), fnmatch(3), regex(7), stat(2),
       lstat(2), ls(1), printf(3), strftime(3), ctime(3), Finding  Files  (on-line  in  Info,  or
       printed).

HISTORY
       As  of  findutils-4.2.2, shell metacharacters (`*', `?' or `[]' for example) used in file‐
       name patterns will match a leading `.', because IEEE  POSIX  interpretation  126  requires
       this.

       As of findutils-4.3.3, -perm /000 now matches all files instead of none.

       Nanosecond-resolution timestamps were implemented in findutils-4.3.3.

       As of findutils-4.3.11, the -delete action sets find's exit status to a nonzero value when
       it fails.  However, find will not exit immediately.  Previously, find's  exit  status  was
       unaffected by the failure of -delete.

       Feature                Added in   Also occurs in
       -newerXY               4.3.3      BSD
       -D                     4.3.1
       -O                     4.3.1
       -readable              4.3.0
       -writable              4.3.0
       -executable            4.3.0
       -regextype             4.2.24
       -exec ... +            4.2.12     POSIX
       -execdir               4.2.12     BSD
       -okdir                 4.2.12
       -samefile              4.2.11
       -H                     4.2.5      POSIX
       -L                     4.2.5      POSIX
       -P                     4.2.5      BSD
       -delete                4.2.3
       -quit                  4.2.3
       -d                     4.2.3      BSD
       -wholename             4.2.0
       -iwholename            4.2.0
       -ignore_readdir_race   4.2.0
       -fls                   4.0
       -ilname                3.8
       -iname                 3.8
       -ipath                 3.8
       -iregex                3.8

       The syntax -perm +MODE does not work as expected in findutils-4.5.11 and it was removed in
       findutils-4.5.12, in favour of -perm /MODE.  The +MODE syntax had  been  deprecated  since
       findutils-4.2.21 which was released in 2005.

NON-BUGS
       $ find . -name *.c -print
       find: paths must precede expression
       Usage: find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]

       This happens because *.c has been expanded by the shell resulting in find actually receiv‐
       ing a command line like this:

       find . -name bigram.c code.c frcode.c locate.c -print

       That command is of course not going to work.  Instead of doing things this way, you should
       enclose the pattern in quotes or escape the wildcard:
       $ find . -name '*.c' -print
       $ find . -name \*.c -print


BUGS
       There  are  security  problems inherent in the behaviour that the POSIX standard specifies
       for find, which therefore cannot be fixed.  For example, the -exec  action  is  inherently
       insecure, and -execdir should be used instead.  Please see Finding Files for more informa‐
       tion.

       The environment variable LC_COLLATE has no effect on the -ok action.

       The   best   way   to   report   a   bug   is   to   use   the   form   at   http://savan‐
       nah.gnu.org/bugs/?group=findutils.   The  reason for this is that you will then be able to
       track progress in fixing the problem.   Other comments about find(1) and about the  findu‐
       tils  package in general can be sent to the bug-findutils mailing list.  To join the list,
       send email to bug-findutils-request@gnu.org.



                                                                                          FIND(1)
TAR(1)                                    User Commands                                    TAR(1)



NAME
       tar - manual page for tar 1.26

SYNOPSIS
       tar [OPTION...] [FILE]...

DESCRIPTION
       GNU  `tar'  saves  many files together into a single tape or disk archive, and can restore
       individual files from the archive.

       Note that this manual page contains just very brief description (or more like  a  list  of
       possible functionality) originally generated by the help2man utility.  The full documenta‐
       tion for tar is maintained as a Texinfo manual.  If the info and tar programs are properly
       installed at your site, the command `info tar' should give you access to the complete man‐
       ual.

EXAMPLES
       tar -cf archive.tar foo bar
              # Create archive.tar from files foo and bar.

       tar -tvf archive.tar
              # List all files in archive.tar verbosely.

       tar -xf archive.tar
              # Extract all files from archive.tar.

DEFAULTS
       *This* tar installation defaults to:

       --format=gnu   -f-   -b20   --quoting-style=escape   --rmt-command=/sbin/rmt    --rsh-com‐
       mand=/usr/bin/rsh

Main operation mode:
       -A, --catenate, --concatenate
              append tar files to an archive

       -c, --create
              create a new archive

       -d, --diff, --compare
              find differences between archive and file system

       --delete
              delete from the archive (not on mag tapes!)

       -r, --append
              append files to the end of an archive

       -t, --list
              list the contents of an archive

       --test-label
              test the archive volume label and exit

       -u, --update
              only append files newer than copy in archive

       -x, --extract, --get
              extract files from an archive

Common options:
       -C, --directory=DIR
              change to directory DIR

       -f, --file=ARCHIVE
              use archive file or device ARCHIVE

       -j, --bzip2
              filter the archive through bzip2

        -J, --xz
              filter the archive through xz

       -p, --preserve-permissions
              extract  information  about  file permissions (default for superuser)

       -v, --verbose
              verbosely list files processed

       -z, --gzip
              filter the archive through gzip


Operation modifiers:
       --check-device
              check device numbers when creating incremental archives (default)

       -g, --listed-incremental=FILE
              handle new GNU-format incremental backup

       -G, --incremental
              handle old GNU-format incremental backup

       --ignore-failed-read
              do not exit with nonzero on unreadable files

       --level=NUMBER
              dump level for created listed-incremental archive

       -n, --seek
              archive is seekable

       --no-check-device
              do not check device numbers when creating incremental archives

       --no-seek
              archive is not seekable

       --occurrence[=NUMBER]
              process  only  the  NUMBERth occurrence of each file in the archive; this option is
              valid only in conjunction with one of the subcommands --delete,  --diff,  --extract
              or  --list  and when a list of files is given either on the command line or via the
              -T option; NUMBER defaults to 1

       --sparse-version=MAJOR[.MINOR]
              set version of the sparse format to use (implies --sparse)

       -S, --sparse
              handle sparse files efficiently

Overwrite control:
       -k, --keep-old-files
              don't replace existing files when extracting, treat them as errors

       --keep-newer-files
              don't replace existing files that are newer than their archive copies

       --keep-directory-symlink
              Don't replace existing symlinks to directories when extracting.

       --no-overwrite-dir
              preserve metadata of existing directories

       --overwrite
              overwrite existing files when extracting

       --overwrite-dir
              overwrite metadata of existing directories when extracting (default)

       --recursive-unlink
              empty hierarchies prior to extracting directory

       --remove-files
              remove files after adding them to the archive

       --skip-old-files
              don't replace existing files when extracting, silently skip over them

       -U, --unlink-first
              remove each file prior to extracting over it

       -W, --verify
              attempt to verify the archive after writing it

Select output stream:
       --ignore-command-error ignore exit codes of children

       --no-ignore-command-error
              treat non-zero exit codes of children as error

       -O, --to-stdout
              extract files to standard output

       --to-command=COMMAND
              pipe extracted files to another program

Handling of file attributes:
       --atime-preserve[=METHOD]
              preserve access times on dumped files, either by restoring the times after  reading
              (METHOD='replace';  default)  or  by  not  setting  the  times  in  the first place
              (METHOD='system')

       --delay-directory-restore
              delay setting modification times and permissions of extracted directories until the
              end of extraction

       --group=NAME
              force NAME as group for added files

       --mode=CHANGES
              force (symbolic) mode CHANGES for added files

       --mtime=DATE-OR-FILE
              set mtime for added files from DATE-OR-FILE

       -m, --touch
              don't extract file modified time

       --no-delay-directory-restore
              cancel the effect of --delay-directory-restore option

       --no-same-owner
              extract files as yourself (default for ordinary users)

       --no-same-permissions
              apply  the  user's  umask when extracting permissions from the archive (default for
              ordinary users)

       --numeric-owner
              always use numbers for user/group names

       --owner=NAME
              force NAME as owner for added files

       -p, --preserve-permissions, --same-permissions
              extract information about file permissions (default for superuser)

       --preserve
              same as both -p and -s

       --same-owner
              try extracting files with the same ownership as exists in the archive (default  for
              superuser)

       -s, --preserve-order, --same-order
              sort names to extract to match archive

Handling of extended file attributes:
       --acls Enable the POSIX ACLs support

       --no-acls
              Disable the POSIX ACLs support

       --no-selinux
              Disable the SELinux context support

       --no-xattrs
              Disable extended attributes support

       --selinux
              Enable the SELinux context support

       --xattrs
              Enable extended attributes support

       --xattrs-exclude=MASK
              specify the exclude pattern for xattr keys

       --xattrs-include=MASK
              specify the include pattern for xattr keys

Device selection and switching:
       -f, --file=ARCHIVE
              use archive file or device ARCHIVE

       --force-local
              archive file is local even if it has a colon

       -F, --info-script=NAME, --new-volume-script=NAME
              run script at end of each tape (implies -M)

       -L, --tape-length=NUMBER
              change tape after writing NUMBER x 1024 bytes

       -M, --multi-volume
              create/list/extract multi-volume archive

       --rmt-command=COMMAND
              use given rmt COMMAND instead of rmt

       --rsh-command=COMMAND
              use remote COMMAND instead of rsh

       --volno-file=FILE
              use/update the volume number in FILE

Device blocking:
       -b, --blocking-factor=BLOCKS
              BLOCKS x 512 bytes per record

       -B, --read-full-records
              reblock as we read (for 4.2BSD pipes)

       -i, --ignore-zeros
              ignore zeroed blocks in archive (means EOF)

       --record-size=NUMBER
              NUMBER of bytes per record, multiple of 512

Archive format selection:
       -H, --format=FORMAT
              create archive of the given format

              FORMAT is one of the following:

                     gnu    GNU tar 1.13.x format

                     oldgnu GNU format as per tar <= 1.12

                     pax    POSIX 1003.1-2001 (pax) format

                     posix  same as pax

                     ustar  POSIX 1003.1-1988 (ustar) format

                     v7     old V7 tar format

       --old-archive, --portability
              same as --format=v7

       --pax-option=keyword[[:]=value][,keyword[[:]=value]]...
              control pax keywords

       --posix
              same as --format=posix

       -V, --label=TEXT
              create  archive with volume name TEXT; at list/extract time, use TEXT as a globbing
              pattern for volume name

Compression options:
       -a, --auto-compress
              use archive suffix to determine the compression program

       -I, --use-compress-program=PROG
              filter through PROG (must accept -d)

       -j, --bzip2
              filter the archive through bzip2

       -J, --xz
              filter the archive through xz

       --lzip filter the archive through lzip

       --lzma filter the archive through lzma

       --lzop

       --no-auto-compress
              do not use archive suffix to determine the compression program

       -z, --gzip, --gunzip, --ungzip
              filter the archive through gzip

       -Z, --compress, --uncompress
              filter the archive through compress

       Note: You might need to install external program (lzip/ncompress/lzma...) to use  some  of
       these compression options

Local file selection:
       --add-file=FILE
              add given FILE to the archive (useful if its name starts with a dash)

       --backup[=CONTROL]
              backup before removal, choose version CONTROL

       -C, --directory=DIR
              change to directory DIR

       --exclude=PATTERN
              exclude files, given as a PATTERN

       --exclude-backups
              exclude backup and lock files

       --exclude-caches
              exclude  contents  of  directories containing CACHEDIR.TAG, except for the tag file
              itself

       --exclude-caches-all
              exclude directories containing CACHEDIR.TAG

       --exclude-caches-under exclude everything under directories containing
              CACHEDIR.TAG

       --exclude-tag=FILE
              exclude contents of directories containing FILE, except for FILE itself

       --exclude-tag-all=FILE exclude directories containing FILE

       --exclude-tag-under=FILE
              exclude everything under directories containing FILE

       --exclude-vcs
              exclude version control system directories

       -h, --dereference
              follow symlinks; archive and dump the files they point to

       --hard-dereference
              follow hard links; archive and dump the files they refer to

       -K, --starting-file=MEMBER-NAME
              begin at member MEMBER-NAME in the archive

       --newer-mtime=DATE
              compare date and time when data changed only

       --no-null
              disable the effect of the previous --null option

       --no-recursion
              avoid descending automatically in directories

       --no-unquote
              do not unquote filenames read with -T

       --null                 -T reads null-terminated names, disable -C

       -N, --newer=DATE-OR-FILE, --after-date=DATE-OR-FILE
              only store files newer than DATE-OR-FILE

       --one-file-system
              stay in local file system when creating archive

       -P, --absolute-names
              don't strip leading `/'s from file names

       --recursion
              recurse into directories (default)

       --suffix=STRING
              backup before removal, override usual suffix ('~' unless overridden by  environment
              variable SIMPLE_BACKUP_SUFFIX)

       -T, --files-from=FILE
              get names to extract or create from FILE

       --unquote
              unquote filenames read with -T (default)

       -X, --exclude-from=FILE
              exclude patterns listed in FILE

File name transformations:
       --strip-components=NUMBER
              strip NUMBER leading components from file names on extraction

       --transform=EXPRESSION, --xform=EXPRESSION
              use sed replace EXPRESSION to transform file names

              File name matching options (affect both exclude and include patterns):

       --anchored
              patterns match file name start

       --ignore-case
              ignore case

       --no-anchored
              patterns match after any `/' (default for exclusion)

       --no-ignore-case
              case sensitive matching (default)

       --no-wildcards
              verbatim string matching

       --no-wildcards-match-slash
              wildcards do not match `/'

       --wildcards
              use wildcards (default)

       --wildcards-match-slash
              wildcards match `/' (default for exclusion)

Informative output:
       --checkpoint[=NUMBER]
              display progress messages every NUMBERth record (default 10)

       --checkpoint-action=ACTION
              execute ACTION on each checkpoint

       --full-time
              print file time to its full resolution

       --index-file=FILE
              send verbose output to FILE

       -l, --check-links
              print a message if not all links are dumped

       --no-quote-chars=STRING
              disable quoting for characters from STRING

       --quote-chars=STRING
              additionally quote characters from STRING

       --quoting-style=STYLE
              set name quoting style; see below for valid STYLE values

       -R, --block-number
              show block number within archive with each message

       --show-defaults
              show tar defaults

       --show-omitted-dirs
              when listing or extracting, list each directory that does not match search criteria

       --show-transformed-names, --show-stored-names
              show file or archive names after transformation

       --totals[=SIGNAL]
              print  total  bytes  after  processing  the archive; with an argument - print total
              bytes when this SIGNAL is delivered; Allowed signals are: SIGHUP, SIGQUIT,  SIGINT,
              SIGUSR1 and SIGUSR2; the names without SIG prefix are also accepted

       --utc  print file modification dates in UTC

       -v, --verbose
              verbosely list files processed

       --warning=KEYWORD
              warning control

       -w, --interactive, --confirmation
              ask for confirmation for every action

Compatibility options:
       -o     when creating, same as --old-archive; when extracting, same as --no-same-owner

Other options:
       -?, --help
              give this help list

       --restrict
              disable use of some potentially harmful options

       --usage
              give a short usage message

       --version
              print program version

       Mandatory  or  optional  arguments  to long options are also mandatory or optional for any
       corresponding short options.

       The backup suffix is `~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.   The  version
       control may be set with --backup or VERSION_CONTROL, values are:

       none, off
              never make backups

       t, numbered
              make numbered backups

       nil, existing
              numbered if numbered backups exist, simple otherwise

       never, simple
              always make simple backups

       Valid arguments for the --quoting-style option are:

              literal shell shell-always c c-maybe escape locale clocale

AUTHOR
       Written by John Gilmore and Jay Fenlason.

REPORTING BUGS
       Report bugs to <bug-tar@gnu.org>.

COPYRIGHT
       Copyright  ©  2013  Free  Software  Foundation, Inc.  License GPLv3+: GNU GPL version 3 or
       later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO  WARRANTY,
       to the extent permitted by law.



tar 1.26                                  February 2013                                    TAR(1)
